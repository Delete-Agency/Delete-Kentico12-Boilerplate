<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.OnlineMarketing</name>
    </assembly>
    <members>
        <member name="T:CMS.OnlineMarketing.ABTestConstants">
            <summary>
            Defines constants for A/B test module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.AB_TEST_VARIANT_QUERY_STRING_PARAMETER_NAME">
            <summary>
            Defines a query string parameter that indicates which A/B variant is to be displayed in the UI.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABSESSIONCONVERSION_FIRST">
            <summary>
            Code name of the first session conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABSESSIONCONVERSION_RECURRING">
            <summary>
            Code name of the recurring session conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABCONVERSION">
            <summary>
            Code name of the conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.AB_COOKIE_PREFIX">
            <summary>
            Prefix of A/B test cookie names.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestNameHelper">
            <summary>
            Contains helper method for default A/B test naming.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets display name to be used when initializing a new A/B test for a page.
            </summary>
            <param name="page">Page to get display name for.</param>
            <returns>Returns display name for <paramref name="page"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <remarks>
            The default implementation returns display name in format '<see cref="P:CMS.DocumentEngine.TreeNode.DocumentName"/> (<see cref="P:CMS.DocumentEngine.TreeNode.DocumentCulture"/>)'.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayNameInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets display name to be used when initializing a new A/B test for a page.
            </summary>
            <param name="page">Page to get display name for.</param>
            <returns>Returns display name for <paramref name="page"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <remarks>
            The default implementation returns display name in format '<see cref="P:CMS.DocumentEngine.TreeNode.DocumentName"/> (<see cref="P:CMS.DocumentEngine.TreeNode.DocumentCulture"/>)'.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestManager">
            <summary>
            Class provides management methods for retrieving and creating A/B test variants.
            Methods of this class do not save any changes made to pages, they have to be saved explicitly.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH">
            <summary>
            Maximum length of a variant name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.#ctor(CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestManager"/>.
            </summary>
            <param name="serializer">Serializes the <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.ABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than <see cref="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH"/> characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetSourceVariantConfigurationOrThrow(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration,System.Nullable{System.Guid})">
            <summary>
            Gets the variants configuration of the <paramref name="page"/>.
            </summary>
            <param name="page">Page for which to get the variants configuration.</param>
            <param name="testConfiguration">A/B test configuration of the page.</param>
            <param name="sourceVariantGuid">GUID of the variant.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetVariantOrThrow(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration,System.Guid)">
            <summary>
            Gets a variant from <paramref name="testConfiguration"/> belonging to <paramref name="page"/> identified by <paramref name="variantGuid"/>.
            </summary>
            <param name="page">Page for which to get the variant.</param>
            <param name="testConfiguration">A/B test configuration of the page.</param>
            <param name="variantGuid">GUID of the variant to get.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="page"/> does not contain A/B test variant identified by <paramref name="variantGuid"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.CreateABVariant(System.String,System.Boolean,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Returns newly created instance of <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> using given parameters.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.UpdateDocument(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Updates given <paramref name="page"/> by given <paramref name="variantsConfiguration"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CachedABTestManager">
            <summary>
            Acts as a decorator for <see cref="T:CMS.OnlineMarketing.IABTestManager"/> and adds caching to methods.
            </summary>
            <remarks>
            The implementation caches the <see cref="M:CMS.OnlineMarketing.CachedABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)"/> method's return value only.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.CachedABTestManager.CacheMinutes">
            <summary>
            Gets the number of minutes used for absolute cache expiration.
            </summary>
            <remarks>
            The implementation returns 1440 minutes (24 hours).
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.#ctor(CMS.OnlineMarketing.IABTestManager,CMS.Core.Internal.IDateTimeNowService)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.CachedABTestManager"/>.
            </summary>
            <param name="abTestManager"><see cref="T:CMS.OnlineMarketing.IABTestManager"/> implementation to be decorated with caching.</param>
            <param name="dateTimeNowService">Service used for getting current datetime.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            Results of this method are cached.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When feature is not available by license, A/B testing is disabled, resource is not allowed on site, user does not have a Read permission, site isn't defined as content only or document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.CachedABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than <see cref="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH"/> characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister">
            <summary>
            Register for conversion types used in A/B testing feature.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Instance">
            <summary>
            Gets the <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister"/> instance.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Items">
            <summary>
            Gets all registered instances of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)">
            <summary>
            Registers given <paramref name="definition"/> to the system.
            </summary>
            <param name="definition">Instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/> to be registered.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when null <paramref name="definition"/> is provided.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="definition"/> with already registered <see cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/> is provided.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Get(System.String)">
            <summary>
            Gets registered configuration retrieved by given <paramref name="conversionName"/>.
            </summary>
            <param name="conversionName">Conversion type name.</param>
            <returns>Configuration instance or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when null or empty <paramref name="conversionName"/> is provided.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionDefinition">
            <summary>
            Describes configuration for A/B test conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName">
            <summary>
            Represents unique code name of conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionDisplayName">
            <summary>
            Represents display name of conversion type.
            </summary>
            <remarks>
            String for localization can be used.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.DefaultValuePlaceholderText">
            <summary>
            A placeholder text for the conversion type default value field.
            </summary>
            <remarks>
            String for localization can be used.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.FormControlDefinition">
            <summary>
            Definition of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.IsSystem">
            <summary>
            Indicates whether the conversion is a system conversion.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,CMS.OnlineMarketing.ABTestFormControlDefinition)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="formControlDefinition">Form control definition used to pick the object related to conversion type.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="formControlDefinition"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="isSystem">Determines whether the conversion should be registered as a system conversion.</param>
            <param name="defaultValuePlaceholderText">Placeholder text for the conversion type default value field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,CMS.OnlineMarketing.ABTestFormControlDefinition,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="formControlDefinition">Form control definition used to pick the object related to conversion type.</param>
            <param name="isSystem">Determines whether the conversion should be registered as a system conversion.</param>
            <param name="defaultValuePlaceholderText">Placeholder text for the conversion type default value field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="formControlDefinition"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionHelper">
            <summary>
            Helper class for working with A/B test conversions.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionHelper.CONVERSION_FULLNAME_SEPARATOR">
            <summary>
            Separator ('|') is used to join base conversion name from its definition and related item identifier (if specified).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionHelper.GetConversionFullName(System.String,System.String)">
            <summary>
            Create full name of <paramref name="conversionName"/> using given <paramref name="relatedItemIdentifier"/>.
            </summary>
            <param name="conversionName">Name of conversion which full name to return.</param>
            <param name="relatedItemIdentifier">Identifier of a item related to conversion.</param>
            <returns>Full name of conversion.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionHelper.GetConversionOriginalName(System.String)">
            <summary>
            Returns base conversion name if given name <paramref name="conversionFullName"/> contains related item identifier.
            </summary>
            <param name="conversionFullName">Conversion name which may contain related item identifier</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="conversionFullName"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConversionLogger">
            <summary>
            Class providing method for logging A/B test conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.#ctor(CMS.OnlineMarketing.Internal.IABUserStateManagerFactory,CMS.WebAnalytics.IAnalyticsConsentProvider)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConversionLogger"/> with given <paramref name="abUserStateManagerFactory"/> and <paramref name="analyticsConsentProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.LogConversion``1(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Log A/B test conversion with given parameters. Actual logging of conversions is different for content only sites and other sites based on given <paramref name="siteName"/>.
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier in <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager`1"/>.</typeparam>
            <param name="requestDomain">Domain of current HTTP request.</param>
            <param name="siteName">Site name where conversion occurred.</param>
            <param name="culture">Culture of page where conversion occurred.</param>
            <param name="conversionName">Name of conversion registered in system.</param>
            <param name="itemIdentifier">Identifier of object connected to conversion.</param>
            <param name="objectId">ID of object connected with conversion.</param>
            <param name="count">Number of conversions that occurred.</param>
            <param name="value">Conversion value.</param>
            <seealso cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.GetConversionValue(CMS.OnlineMarketing.ABTestInfo,CMS.SiteProvider.SiteInfo,System.String,System.Double)">
            <summary>
            Returns value that should be used as value of given <paramref name="conversionName"/>.
            </summary>
            <param name="abTest">A/B test for which conversion is logged.</param>
            <param name="site">Related site info.</param>
            <param name="conversionName">Name of conversion for which value is returned.</param>
            <param name="value">Conversion value used for portal engine A/B tests, or fallback conversion value for content only A/B tests.</param>
            <returns>Conversion value.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer">
            <summary>
            Serializer of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.Serialize(CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Serializes an AB test configuration to JSON.
            </summary>
            <param name="testConfiguration">Configuration to be serialized to JSON.</param>
            <returns>Returns serialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.Deserialize(System.String)">
            <summary>
            Deserializes configuration of an AB test instance from JSON.
            </summary>
            <param name="configurationJson">Configuration in JSON to be deserialized.</param>
            <returns>Returns deserialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.GetSettings">
            <summary>
            Gets serializer settings used to serialize and deserialize <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/> objects.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfigurationTypesBinder">
            <summary>
            Serialization binder for <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationTypesBinder.BindToType(System.String,System.String)">
            <summary>
            Binds given <paramref name="typeName"/> in <paramref name="assemblyName"/> only if this type is valid for <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer">
            <summary>
            Defines serializer of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer.Serialize(CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Serializes an AB test configuration to JSON.
            </summary>
            <param name="testConfiguration">Configuration to be serialized to JSON.</param>
            <returns>Returns serialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer.Deserialize(System.String)">
            <summary>
            Deserializes configuration of an AB test instance from JSON.
            </summary>
            <param name="configurationJson">Configuration in JSON to be deserialized.</param>
            <returns>Returns deserialized configuration.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.VariantConfigurationSource">
            <summary>
            Source of the configuration for A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.VariantConfigurationSource.Widgets">
            <summary>
            Page builder widgets configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.VariantConfigurationSource.PageTemplate">
            <summary>
            Page template configuration.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABRequestManager">
            <summary>
            Class managing requests on AB test pages.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABRequestManager.GetABTestPage(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns the given page or variant page based on whether it has an AB test running.
            </summary>
            <param name="originalPage">Original page</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABRequestManager.GetABTestVariant(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets AB variant from the user's cookie or randomly selects one and assigns it to the user. Also checks whether the user should be excluded or not
            (see <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestIncludedTraffic"/> or <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestVisitorTargeting"/>).
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABRequestManager.ExcludeVisitorsBasedOnSegmentationConditions(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.Internal.IABUserStateManager{System.String})">
            <summary>
            Uses <see cref="T:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator"/> to check segmentation conditions.
            Excludes visitor from AB test if did not pass.
            Excludes also editors from test.
            </summary>
            <param name="abTest">AB test</param>
            <param name="manager">AB user state manager</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> or <paramref name="manager"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABRequestManager.SelectRandomTestVariant(System.Collections.Generic.IList{CMS.OnlineMarketing.ABVariantInfo})">
            <summary>
            Returns random variant.
            </summary>
            <param name="variants">List of AB variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABRequestManager.ExcludeAndSetOriginalPage(CMS.OnlineMarketing.Internal.IABUserStateManager{System.String})">
            <summary>
            Excludes visitor from ab test and sets him original page.
            </summary>
            <param name="manager">AB user state manager</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestHelper">
            <summary>
            Contains A/B test helper methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetABTestPage(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets the latest version of a page for the given <paramref name="abTest"/>.
            Site and culture of the A/B test has to match site and culture of the page.
            </summary>
            <param name="abTest">A/B test to get the page for.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="abTest"/> is null.</exception>
            <returns>Found page.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetUsersTests">
            <summary>
            Gets names of the current user's A/B tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetValidVariants">
            <summary>
            Returns collection with variant identifiers of A/B tests, which are running and in which the current user is included.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.HasABTestVariantsMaterialized(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns whether <paramref name="abTest"/> has it's variants materialized.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetABTestPageInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets the latest version of a page for given <paramref name="abTest"/>.
            Site and culture of the A/B test has to match site and culture of the page.
            </summary>
            <param name="abTest">A/B test to get the page for.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="abTest"/> is null.</exception>
            <returns>Found page.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetUsersTestsInternal">
            <summary>
            Gets names of the current user's A/B tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetValidVariantsInternal">
            <summary>
            Returns collection with variant identifiers of A/B tests, which are running and in which the current user is included.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestVariant">
            <summary>
            Represents single AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.Guid">
            <summary>
            Identifier of a AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.Name">
            <summary>
            Name of a AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.IsOriginal">
            <summary>
            Indicates whether this AB test variant is original. In case of <see cref="P:CMS.OnlineMarketing.Internal.ABTestVariant.IsOriginal"/> variant, data associated to this variant are loaded from respective properties of <see cref="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfo"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.PageBuilderWidgets">
            <summary>
            Configuration of page builder widgets in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.PageTemplate">
            <summary>
            Configuration of page template in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestVariant.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> class.
            </summary>
            <param name="name">Name of new variant.</param>
            <param name="isOriginal">Whether variant is original.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestVariant.#ctor(System.Guid,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> class.
            </summary>
            <param name="guid">Guid of the variant.</param>
            <param name="name">Name of new variant.</param>
            <param name="isOriginal">Whether variant is original.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfiguration">
            <summary>
            Represents the configuration of a AB test of a given document.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestConfiguration.Variants">
            <summary>
            Collection of AB test variants associated with given document.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/> class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABTestConversionLogger">
            <summary>
            Defines set of methods for logging A/B test conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABTestConversionLogger.LogConversion``1(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Log A/B test conversion with given parameters. Actual logging of conversions is different for content only sites and other sites based on given <paramref name="siteName"/>.
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier in <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager`1"/>.</typeparam>
            <param name="requestDomain">Domain of current HTTP request.</param>
            <param name="siteName">Site name where conversion occurred.</param>
            <param name="culture">Culture of page where conversion occurred.</param>
            <param name="conversionName">Name of conversion registered in system.</param>
            <param name="itemIdentifier">Identifier of object connected to conversion.</param>
            <param name="objectId">ID of object connected with conversion.</param>
            <param name="count">Number of conversions that occurred.</param>
            <param name="value">Conversion value.</param>
            <seealso cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)"/>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.StaticRandom">
            <summary>
            Class that provides <see cref="T:System.Random"/> generator from thread local storage. This class is preferred to use, because <see cref="T:System.Random"/> class is not
            thread-safe.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.StaticRandom.Instance">
            <summary>
            Gets instance for generator. Differs for each thread.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.StaticRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>. However, if <paramref name="maxValue"/> equals zero, <paramref name="maxValue"/> is returned.
            </returns>
            <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue"/> must be greater than or equal to zero. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxValue"/> is less than zero. </exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.StaticRandom.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less than <paramref name="maxValue"/>; that is, the range of return values includes <paramref name="minValue"/> but not <paramref name="maxValue"/>. If <paramref name="minValue"/> equals <paramref name="maxValue"/>, <paramref name="minValue"/> is returned.
            </returns>
            <param name="minValue">The inclusive lower bound of the random number returned. </param><param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minValue"/> is greater than <paramref name="maxValue"/>. </exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABUserStateManagerFactory">
            <summary>
            Factory for <see cref="T:CMS.OnlineMarketing.Internal.IABUserStateManager`1"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManagerFactory.Create``1(System.String)">
            <summary>
            Creates a new user state manager for A/B test identified by <paramref name="abTestName"/>.
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier.</typeparam>
            <param name="abTestName">Name of A/B test to create a manager for.</param>
            <returns>Returns a new instance of A/B test manager for a test.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="abTestName"/> is null or an empty string.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABVisitRequestHelper">
            <summary>
            Holds data related to the current request AB visit logging.
            </summary>
            <remarks>
            This helper class is designed for output cache support in MVC. ABVisit is stored in ASP.NET session. Session creates cookie when something is stored.
            Set-Cookie causes that output cache response is not cached. This helper ensures that session is created within a separate request.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.ABVisitRequestEnabled">
            <summary>
            Indicates whether <see cref="T:CMS.OnlineMarketing.Internal.ABVisitRequestHelper"/> should be used.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.ABVisitRequestTestName">
            <summary>
            Gets the test name used for ABVisit hit within current request.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.SetABVisitRequestTestName(System.String)">
            <summary>
            Sets the current ABVisit test name to the request store
            </summary>
            <param name="testName">A/B test name</param>
            <returns><c>true</c> when stored successfully to the request store; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABUserStateManager`1">
            <summary>
            Manages current user's A/B test state - can assign an A/B variant to him, save which conversions he has done, or read saved state. Internally uses a cookie for permanent state
            (see <see cref="T:CMS.OnlineMarketing.Internal.ABCookieValue`1"/>) and session for session state(see <see cref="T:CMS.Helpers.SessionHelper"/>).
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier.</typeparam>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.IABUserStateManager`1.IsExcluded">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.SetVisit">
            <summary>
            Sets a A/B test visit for current user so that from now on, conversions can be logged also as A/B test session conversions.
            </summary>
            <returns>True if visit was assigned successfully (wasn't already assigned). False if a visit is already set.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.SetVisitToSession">
            <summary>
            Sets current A/B test visit to the session store.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.IsABVisit">
            <summary>
            Returns true if user has visited A/B test page and has visit session.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.GetVariantIdentifier">
            <summary>
            Gets name of the A/B variant assigned to the current user. Returns null, if the user hasn't got any variant assigned yet.
            </summary>
            <returns>Code name of the variant that is assigned to the current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.AssignVariant(`0)">
            <summary>
            Assigns an A/B variant to current user so that it can be used on next visit. From now on, permanent conversions can be also saved to
            user's state.
            </summary>
            <param name="variantIdentifier">Identifier of the variant to assign to current user.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.Exclude">
            <summary>
            Excludes visitor from A/B test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.GetPermanentConversions">
            <summary>
            Gets permanent conversions that are done by current user.
            </summary>
            <returns>Permanent conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.GetSessionConversions">
            <summary>
            Gets session conversions that are done by current user.
            </summary>
            <returns>Session conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.AddConversion(System.String)">
            <summary>
            Adds a conversion to session and permanent conversions if possible.
            </summary>
            <param name="conversion">Conversion to add to current user</param>
            <exception cref="T:System.ArgumentException">conversion is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager`1.IsABTestCookieDefined">
            <summary>
            Returns true when A/B test cookie is defined.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABUserStateManagerFactory">
            <summary>
            Factory for <see cref="T:CMS.OnlineMarketing.Internal.IABUserStateManager`1"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManagerFactory.Create``1(System.String)">
            <summary>
            Creates a new user state manager for A/B test identified by <paramref name="abTestName"/>.
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier.</typeparam>
            <param name="abTestName">Name of A/B test to create a manager for.</param>
            <returns>Returns a new instance of A/B test manager for a test.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="abTestName"/> is null or an empty string.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABResponseCookieProvider">
            <summary>
            Defines interface for cookie methods.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.SetValue(System.String,System.String,System.String,System.DateTime,System.Nullable{System.Boolean},System.String)">
            <summary>
            Sets the cookie value.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie path</param>
            <param name="expires">Cookie expiration</param>
            <param name="httpOnly">Indicates whether a cookie is accessible by client-side script</param>
            <param name="domain">Cookie domain</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.GetValue(System.String)">
            <summary>
            Returns cookie value
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.GetDistinctCookieNames">
            <summary>
             Gets names of both request and response cookies without duplicates.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator">
            <summary>
            Class that evaluates AB segmentation conditions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckUserIsEditor">
            <summary>
            Returns true if visitor is editor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckIncludedTrafficCondition(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass traffic condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckVisitorTargetingMacro(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass targeting macro condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABUserStateManager`1">
            <summary>
            Manages current user's A/B test state - can assign an A/B variant to him, save which conversions he has done, or read saved state. Internally uses a cookie for permanent state
            (see <see cref="T:CMS.OnlineMarketing.Internal.ABCookieValue`1"/>) and session for session state(see <see cref="T:CMS.Helpers.SessionHelper"/>).
            </summary>
            <typeparam name="TIdentifier">Type of the A/B variant identifier.</typeparam>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABUserStateManager`1.CookieValue">
            <summary>
            Gets or sets cached cookie value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABUserStateManager`1.IsExcluded">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager`1"/>.
            </summary>
            <param name="testName">Name of the test for which the user's state is managed</param>
            <exception cref="T:System.ArgumentException">testName is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.#ctor(System.String,CMS.OnlineMarketing.Internal.IABResponseCookieProvider)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager`1"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.SetVisit">
            <summary>
            Sets a A/B test visit for current user so that from now on, conversions can be logged also as A/B test session conversions.
            </summary>
            <returns>True if visit was assigned successfully (wasn't already assigned). False if a visit is already set.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.SetVisitToSession">
            <summary>
            Sets current A/B test visit directly to the session store.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.IsABVisit">
            <summary>
            Returns true if user has visited A/B test page and has visit session.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.GetVariantIdentifier">
            <summary>
            Gets name of the A/B variant assigned to the current user. Returns null, if the user hasn't got any variant assigned yet.
            </summary>
            <returns>Code name of the variant that is assigned to the current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.AssignVariant(`0)">
            <summary>
            Assigns an A/B variant to current user so that it can be used on next visit. From now on, permanent conversions can be also saved to
            user's state.
            </summary>
            <param name="variantIdentifier">Identifier of the variant to assign to current user.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.Exclude">
            <summary>
            Excludes visitor from A/B test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.GetPermanentConversions">
            <summary>
            Gets permanent conversions that are done by current user.
            </summary>
            <returns>Permanent conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.GetSessionConversions">
            <summary>
            Gets session conversions that are done by current user.
            </summary>
            <returns>Session conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.AddConversion(System.String)">
            <summary>
            Adds a conversion to session and permanent conversions if possible.
            </summary>
            <param name="conversion">Conversion to add to current user</param>
            <exception cref="T:System.ArgumentException">conversion is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.IsABTestCookieDefined">
            <summary>
            Returns true when A/B test cookie is defined.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.TryAddPermanentConversion(System.String)">
            <summary>
            Adds specified conversion to permanent cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.TryAddSessionConversion(System.String)">
            <summary>
            Adds specified conversion to session cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.GetCookieValue(System.String)">
            <summary>
            Returns deserialized value of specified cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager`1.SetCookie(System.String,CMS.OnlineMarketing.Internal.ABCookieValue{`0},System.DateTime)">
            <summary>
            Serializes object to a cookie as a JSON object.
            </summary>
            <param name="cookieName">Name of the cookie to save object to</param>
            <param name="cookieValue">Object to serialize to the cookie</param>
            <param name="expiration">Expiration of the cookie</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABCookieValue`1">
            <summary>
            Class representing deserialized permanent A/B cookie value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue`1.VariantIdentifier">
            <summary>
            A/B variant identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue`1.ExcludedFromTest">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            If not, Control is always shown and no A/B conversions and A/B visits are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue`1.Conversions">
            <summary>
            Conversions performed during this test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABCookieValue`1.#ctor">
            <summary>
            Constructor. Sets properties to empty values.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionNames">
            <summary>
            Class containing names of A/B test conversions.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PURCHASE">
            <summary>
            Purchase conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PRODUCT_ADDED_TO_CART">
            <summary>
            Product has been added to shopping cart conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PAGE_VISIT">
            <summary>
            Page visit conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.FORM_SUBMISSION">
            <summary>
            Form submission conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.NEWSLETTER_SUBSCRIPTION">
            <summary>
            Subscription to a newsletter conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.USER_REGISTRATION">
            <summary>
            User registration conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PRODUCT_PURCHASE">
            <summary>
            Product purchase conversion.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestFormControlDefinition">
            <summary>
            Describes configuration of the form control used to pick the object related to A/B test conversion type.
            </summary>
            <seealso cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlType">
            <summary>
            Type of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName">
            <summary>
            Name of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlParameters">
            <summary>
            Parameters which allow customization of form control defined by <see cref="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlCaption">
            <summary>
            Caption shown above the form control used to pick the object related to conversion type.
            </summary>
            <seealso cref="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName"/>.
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestFormControlDefinition.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestFormControlDefinition"/>.
            </summary>
            <param name="formControlName">Name of the form control used to pick the object related to conversion type.</param>
            <param name="formControlCaption">Caption shown as label above the form control used to pick the object related to conversion type.</param>
            <param name="formControlParameters">Parameters which allow customization of form control defined by <paramref name="formControlName"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestFormControlDefinition.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestFormControlDefinition"/>.
            </summary>
            <param name="formControlType">Type of the form control used to pick the object related to conversion type.</param>
            <param name="formControlCaption">Caption shown as label above the form control used to pick the object related to conversion type.</param>
            <param name="formControlParameters">Parameters which allow customization of form control defined by <paramref name="formControlType"/>.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.TreeNodeExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DocumentEngine.TreeNode"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetPageBuilderWidgets(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets page builder widgets configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns page builder widgets configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetPageBuilderWidgets(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets page builder widgets configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetPageTemplateConfiguration(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets page template configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns page template configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetPageTemplateConfiguration(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets page template configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetABTestConfiguration(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns A/B test configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetABTestConfiguration(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets A/B test configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestManager">
            <summary>
            Defines set of methods for managing test variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.IABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than 100 characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ICachedABTestManager">
            <summary>
            Acts as a decorator for <see cref="T:CMS.OnlineMarketing.IABTestManager"/> and adds caching to methods.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversion">
            <summary>
            Represents single conversion setting for an A/B test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.ConversionName">
            <summary>
            Code name of the conversion which is used for logging.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.Value">
            <summary>
            Numeric value for conversion of type specified in <see cref="P:CMS.OnlineMarketing.ABTestConversion.ConversionName"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.RelatedItemIdentifier">
            <summary>
            Identifier of an item related to the conversion, e.g. newsletter name related to newsletter subscription conversion.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.RelatedItemDisplayName">
            <summary>
            Display name of an item related to the conversion, e.g. newsletter display name related to newsletter subscription conversion.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.ConversionOriginalName">
            <summary>
            Original name from conversion definition (<see cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.#ctor(System.String,System.String,System.Decimal)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> class.
            </summary>
            <param name="conversionName">Code name of new conversion</param>
            <param name="relatedItemIdentifier">Identifier of related item</param>
            <param name="value">Value of new conversion</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> class from its XML representation.
            </summary>
            <param name="node">XML representation of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.GetXMLNode(System.Xml.XmlDocument)">
            <summary>
            Returns XML node representing the conversion setting.
            </summary>
            <param name="doc">XML document</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.LoadFromXml(System.Xml.XmlNode)">
            <summary>
            Loads conversion setting from XML definition.
            </summary>
            <param name="node">Conversion setting XML node</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionConfiguration">
            <summary>
            Represents conversion configuration for an A/B test which contains list of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> instances.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionConfiguration.mABTest">
            <summary>
            A/B Test to which this Conversion Configuration belongs
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionConfiguration.mABTestConversions">
            <summary>
            List of conversion settings for an A/B test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionConfiguration.ABTestConversions">
            <summary>
            Iterator for conversions in current configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionConfiguration.ConversionsCount">
            <summary>
            Gets conversions count in current configuration.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.#ctor(CMS.OnlineMarketing.ABTestInfo,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionConfiguration"/> class.
            </summary>
            <param name="abTest">Parent A/B Test object.
            If null value is provided, then this object has to be manually serialized into <see cref="T:CMS.OnlineMarketing.ABTestInfo"/> backing DB field.</param>
            <param name="conversionConfig">Serialized <see cref="T:CMS.OnlineMarketing.ABTestConversionConfiguration"/> object.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.SetABTestInfoABTestConversions">
            <summary>
            Serializes current configuration into parent A/B Test object database field.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.Serialize">
            <summary>
            Returns conversion configuration serialized into XML format string.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.AddConversion(CMS.OnlineMarketing.ABTestConversion)">
            <summary>
            Adds new conversion to current configuration.
            </summary>
            <param name="conversion">Conversion to be added.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.GetConversionAt(System.Int32)">
            <summary>
            Gets conversion from current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to retrieve.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.SetConversionAt(System.Int32,CMS.OnlineMarketing.ABTestConversion)">
            <summary>
            Updates conversion in current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to update.</param>
            <param name="conversion">Conversion to be set at <paramref name="index"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.RemoveConversionAt(System.Int32)">
            <summary>
            Removes conversion from current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to remove.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.TryGetConversion(System.String,CMS.OnlineMarketing.ABTestConversion@)">
            <summary>
            Returns true, if conversion specified by <paramref name="conversionName"/> is defined in the configuration and provides this conversion through the output parameter <paramref name="conversion"/> if exists.
            </summary>
            <param name="conversionName">Conversion name.</param>
            <param name="conversion">Output parameter for conversion.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.TryGetConversionByOriginalName(System.String,CMS.OnlineMarketing.ABTestConversion@)">
            <summary>
            Returns true, if conversion specified by <paramref name="conversionOriginalName"/> is defined in the configuration and provides this conversion through the output parameter <paramref name="conversion"/> if exists.
            </summary>
            <param name="conversionOriginalName">Original name of the conversion (<see cref="P:CMS.OnlineMarketing.ABTestConversion.ConversionOriginalName"/>) to be retrieved..</param>
            <param name="conversion">Output parameter for conversion.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestVariant">
            <summary>
            Describes A/B test variant object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.Guid">
            <summary>
            Gets the identifier of a A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.Name">
            <summary>
            Gets the name of a A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.IsOriginal">
            <summary>
            Indicates whether this A/B test variant is original variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.PageBuilderWidgets">
            <summary>
            Configuration of page builder widgets in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.PageTemplate">
            <summary>
            Configuration of page template in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantNameGenerator">
            <summary>
            Generator for unique A/B variant names.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.OnlineMarketing.VariantNameGenerator"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetOriginalName">
            <summary>
            Returns name of original variant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetDefaultUniqueName(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns unique name in default format "Variant A" with character which is not used in any of given <paramref name="existingNames"/>.
            </summary>
            <param name="existingNames">Set of existing names</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetName(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Returns name based on given collection of indexes from <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetNameWithoutExtension(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns name based on given collection of indexes representing characters in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            Name is not required to be extended as none index represents last character in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetNameWithExtension(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns name based on given collection of indexes representing characters in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            Name is required to be extended because atleast one index represents last character in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABCachedObjects">
            <summary>
            Class providing access to cached AB tests and variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABCachedObjects.CACHE_MINUTES">
            <summary>
            Caching is set to 24 hours.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetTests">
            <summary>
            Returns all AB tests using the cached section.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariants(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns AB variants for the given test using the cached section.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariantsData(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns cached variants for the given AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariantDisplayName(System.Int32,System.Guid)">
            <summary>
            Returns cached <see cref="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantDisplayName"/> of A/B test variant with given <paramref name="variantIdentifier"/> on site with given <paramref name="siteId"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestContext">
            <summary>
            Context for AB tests.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.CurrentABTest">
            <summary>
            Current AB test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.CurrentABTestVariant">
            <summary>
            Current AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.IsFirstABRequest">
            <summary>
            Indicates whether this request is the first AB request for the page.
            </summary>
            <remarks>If false, either no AB test is running on the page or the user has already visited it and has valid AB variant saved in the cookie.</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfo">
            <summary>
            ABTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestGUID">
            <summary>
            Unique test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestName">
            <summary>
            Test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDisplayName">
            <summary>
            Test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenTo">
            <summary>
            End date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenFrom">
            <summary>
            Start date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions">
            <summary>
            Test conversions. Only those conversions that are assigned to the test will be shown on overview tab.
            If none conversions are set, all conversions will be visible.
            </summary>
            <remarks>This property can be used only on portal engine sites. Use <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversionConfiguration"/> on content only sites.</remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversionConfiguration">
            <summary>
            Returns object representation of A/B Test conversion configuration.
            </summary>
            <remarks>This property can be used only on content only sites. Use <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions"/> on portal engine sites.</remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestCulture">
            <summary>
            Test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestID">
            <summary>
            Test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestSiteID">
            <summary>
            Site ID of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestWinnerGUID">
            <summary>
            Test winner GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOriginalPage">
            <summary>
            Original page for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestLastModified">
            <summary>
            Last modification of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDescription">
            <summary>
            Test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestIncludedTraffic">
            <summary>
            Indicates what percentage of visitors will be included in AB test.
            This condition is resolved after segmentation macro.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestVisitorTargeting">
            <summary>
            Segmentation macro which decides whether visitor will be included in ab test or not.
            This condition is resolved before traffic condition.
            Available objects are Contact, User and Visitor. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes dependencies from the specified AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the AB Test object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfoProvider">
            <summary>
            Class providing ABTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabled(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ContainsVariants(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Determines whether the specified AB test contains variants.
            </summary>
            <param name="abTest">The AB test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">AB test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTests">
            <summary>
            Returns query of all AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">AB test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">AB test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(System.Int32)">
            <summary>
            Deletes AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestID(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabledInternal(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestIDInternal(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.HandleABVariantDataMaterialization(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Materializes variants of <paramref name="abTestInfo"/> in case A/B test is on content only page, it's OpenFrom column has been changed and it's variants are not materialized.
            </summary>
            <param name="abTestInfo">A/B test whose variant to materialize.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RenameStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames AB test statistics data when code name changes.
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.HandleCodeNameChange(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks for code name change and renames statistics if so.
            </summary>
            <param name="abTestObj">AB Test</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestUsageDataSource">
            <summary>
            Module usage tracking data source for A/B testing module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantDataInfo">
            <summary>
            Represents a materialized A/B variant. 
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantDataInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantID">
            <summary>
            Variant data ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantTestID">
            <summary>
            Variant's test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantDisplayName">
            <summary>
            Variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantGUID">
            <summary>
            Variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantIsOriginal">
            <summary>
            Indicates whether the variant is the original one.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABVariantDataInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABVariantDataInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfo">
            <summary>
            ABVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantPath">
            <summary>
            Variant path.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantLastModified">
            <summary>
            Last modification of variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantTestID">
            <summary>
            Variant's test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantName">
            <summary>
            Variant code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantDisplayName">
            <summary>
            Variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantID">
            <summary>
            Variant ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantGUID">
            <summary>
            Variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantSiteID">
            <summary>
            Site ID of test variant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantDataInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.GetABVariantDataInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.GetVariantsData">
            <summary>
            Returns a query for all the A/B variants data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.SetABVariantDataInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteABVariantDataInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteABVariantDataInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Deletes the object from the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfoProvider">
            <summary>
            Class providing ABVariantInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.mVariantsById">
            <summary>
            Variants indexed by ABVariantID.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.mVariantsByNameSiteTest">
            <summary>
            Variants indexed by key in format [ABVariantName]_[ABVariantSiteID]_[ABVariantTestID].
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfoProvider.VariantsById">
            <summary>
            Variants indexed by ABVariantID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfoProvider.VariantsByNameSiteTest">
            <summary>
            Variants indexed by key in format [ABVariantName]_[ABVariantSiteID]_[ABVariantTestID].
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsForTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns variants for AB test.
            </summary>
            <param name="abTest">AB test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.IsABVariantValid(System.String,System.String,System.String)">
            <summary>
            Checks whether AB variant is assigned to the specified AB test and AB test is running.
            </summary>
            <param name="abTestName">AB test name</param>
            <param name="abVariantName">AB variant name</param>
            <param name="siteName">Site name</param>
            <returns>Returns true if variant is valid</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.Int32)">
            <summary>
            Returns AB variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.String,System.String,System.String)">
            <summary>
            Returns cached AB variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>
            <param name="abTestName">AB test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariants">
            <summary>
            Returns a query for all the AB variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Sets (updates or inserts) specified Variant.
            </summary>
            <param name="variantObj">Variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes specified Variant.
            </summary>
            <param name="variantObj">Variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(System.Int32)">
            <summary>
            Deletes Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsWithMissingTranslations(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns list of variants which do not have translations into all cultures for multi-cultural test or specific translation for single culture test.
            Returns empty list if no variants were found.
            </summary>
            <exception cref="T:System.ArgumentNullException">abTest is null</exception>
            <param name="abTest">AB Test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.ClearHashtables(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.Int32)">
            <summary>
            Returns Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.String,System.String,System.String)">
            <summary>
            Returns cached variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>
            <param name="siteName">Site name</param>
            <param name="abTestName">AB test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoFromDBInternal(System.String,System.String,System.String)">
            <summary>
            Returns Variant with specified name from database.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="variantName">Variant name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes the object from the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsForTestInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Get variants for test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.LoadVariants">
            <summary>
            Loads Variants into hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.RemoveInvalidCacheRecords(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Removes invalid cache records.
            This happens when code name changes.
            </summary>
            <param name="variantObj">AB Variant</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.CheckUniqueDisplayName(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Checks whether the object has unique display name.
            </summary>
            <param name="variant">AB variant</param>
            <exception cref="T:CMS.DataEngine.InfoObjectException">Display name is not unique</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.RenameABVariantStatistics(System.String,System.String,System.Int32,System.String)">
            <summary>
            Renames AB variant statistics data when code name changes.
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
            <param name="abTestName">ABTest name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.HandleCodeNameChange(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Checks for code name change and renames statistics if so.
            </summary>
            <param name="variantObj">AB Variant</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestURLHelper">
            <summary>
            Provides URL processing methods for A/B test conversion logging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestURLHelper.TryRemovePresentationURLAnchorAndQuery(System.String,CMS.SiteProvider.SiteInfo,System.String@)">
            <summary>
            Tries to parse the application-relative path from the provided <paramref name="url"/>. Query string and anchor (#) are omitted.
            </summary>
            <param name="url">Absolute live site url or url relative to presentation url.</param>
            <param name="site">Content-Only site which SitePresentationUrl corresponds with <paramref name="url"/> </param>
            <param name="relativeUrl">In case of successful operation, the result is stored here.</param>
            <returns>
            Returns <c>true</c> when given <paramref name="url"/> was successfully stripped by presentation url and query string; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="url"/> or <paramref name="site"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEnum">
            <summary>
            AB test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Running">
            <summary>
            Running status - test is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Scheduled">
            <summary>
            Scheduled status - test is scheduled to be started.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.NotStarted">
            <summary>
            NotStarted status - test hasn't been started yet.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Finished">
            <summary>
            Finished status - test has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEvaluator">
            <summary>
            Evaluates status of an AB test based on its start and finish dates and times.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsRunning(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test is running.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test is finished.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestNotStarted(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test has not been started yet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestNotStarted(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Checks whether the current AB test status corresponds to not started test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetStatus(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets status of the AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetFormattedStatus(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Gets formatted status of the AB test.
            </summary>
            <param name="status">AB test status</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantColorAssigner">
            <summary>
            Class assigning (graph) colors to AB variants. Is used to generate custom (and cached) colors to Reporting module, so 
            colors of AB testing graphs are not different throughout CMS.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.Palette">
            <summary>
            Palette from which to assign colors to a variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.AssignedColors">
            <summary>
            Cached colors assigned to variants of all tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetColors(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns cached colors for AB variants that belong to given test.
            </summary>
            <param name="test">AB test to get cached colors for</param>
            <returns>Dictionary of cached colors</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Tries to remove AB test from cache.
            </summary>
            <param name="test">AB test to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveVariant(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Tries to remove AB variant from cache. 
            </summary>
            <param name="variant">AB variant to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="variant"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveVariantData(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Tries to remove AB variant data from cache. 
            </summary>
            <param name="variant">AB variant to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="variant"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetVariantColor(System.Int32,System.Int32)">
            <summary>
            Gets cached variant color.
            </summary>
            <param name="variantID">ID of variant to get color for</param>
            <param name="abTestID">ID of test the variant belongs to</param>
            <returns>Cached variant color</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.FindLeastUsedColor(System.Collections.Concurrent.ConcurrentDictionary{System.Int32,System.Drawing.Color})">
            <summary>
            Finds the least used color in given test dictionary. If there is an ambiguity, returns the first from internal palette.
            </summary>
            <param name="assignedColors">AB Test dictionary of colors to search for the least used</param>
            <returns>Color that is least used</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestActivityModifier">
            <summary>
            Class for updating A/B test related properties in activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestActivityModifier.#ctor(CMS.Base.ISiteService)">
            <summary>
            Creates instance of <see cref="T:CMS.OnlineMarketing.ABTestActivityModifier"/>.
            </summary>
            <param name="siteService">Site service.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestActivityModifier.Modify(CMS.Activities.IActivityInfo)">
            <summary>
            Updates <see cref="P:CMS.Activities.IActivityInfo.ActivityABVariantName"/> with name of current A/B test variant if one is present.
            </summary>
            <remarks>Only activities of type <see cref="F:CMS.Activities.PredefinedActivityType.PAGE_VISIT"/> or <see cref="F:CMS.Activities.PredefinedActivityType.LANDING_PAGE"/> are updated.</remarks>
            <param name="activity">Activity which property to update.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactProcessingCheckerActivityLogFilter">
            <summary>
            Filters out logging when processing of contacts (and therefore the activities) cannot continue.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactProcessingCheckerActivityLogFilter.IsDenied">
            <summary>
            Filters out logging for crawlers.
            </summary>
            <returns>Returns <c>true</c> if logging should be filtered out, because processing of contacts cannot continue. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.CurrentUserEnabledTrackingFilter">
            <summary>
            Filters out logging for users with disabled logging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CurrentUserEnabledTrackingFilter.IsDenied">
            <summary>
            Filters out logging for users with disabled logging
            </summary>
            <returns>Returns <c>true</c> if logging should be filtered out, because current user has disabled logging. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.DocumentActivityFilter">
            <summary>
            Filters out logging for pages with disabled logging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DocumentActivityFilter.IsDenied">
            <summary>
            Filters out logging for pages with disabled logging
            </summary>
            <returns>Returns <c>true</c> if logging should be filtered out, because current document has disabled logging. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTActivityModifier">
            <summary>
            Class for updating MVT related properties in activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTActivityModifier.Modify(CMS.Activities.IActivityInfo)">
            <summary>
            Updates <see cref="P:CMS.Activities.IActivityInfo.ActivityMVTCombinationName"/> with current MVT combination name.
            </summary>
            <remarks>Only activities of type <see cref="F:CMS.Activities.PredefinedActivityType.PAGE_VISIT"/> or <see cref="F:CMS.Activities.PredefinedActivityType.LANDING_PAGE"/> are updated.</remarks>
            <param name="activity">Activity which property to update.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationUsageDataSource">
            <summary>
            Module usage tracking data source for content personalization module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoMethods.ActivityLinkedToObject(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoMethods.ActivityLinkedToObject(CMS.Activities.ActivityInfo,System.String,System.String)">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="activityInfo">Activity that should be checked</param>
            <param name="objectType">Object type</param>
            <param name="identifier">Code name or GUID of object</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AutomationStateInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomationStateInfoMethods.GetLastNewsletterIssue(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns GUID of last newsletter that was sent to the user in scope of given automation state. 
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomationStateInfoMethods.GetLastNewsletterIssue(CMS.Automation.AutomationStateInfo)">
            <summary>
            Returns last newsletter issue that was sent to the contact of the state.
            </summary>
            <param name="state">Automation state</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTContext">
            <summary>
            MVT Test context
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTContext.CurrentMVTestName">
            <summary>
            Gets or sets the current multivariate test name
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTContext.CurrentMVTCombinationName">
            <summary>
            Current MVT combination name
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestUsageDataSource">
            <summary>
            Module usage tracking data source for MVTest module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeEnum">
            <summary>
            Variant type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Zone">
            <summary>
            Zone
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.WebPart">
            <summary>
            Web part
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Widget">
            <summary>
            Widget
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeFunctions">
            <summary>
            Helper functions for webpart/zone/widget variant type enum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeEnum(System.String)">
            <summary>
            Returns VariantTypeEnum enum.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeString(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Returns VariantType string.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingUsageDataSource">
            <summary>
            Module usage tracking data source for Online marketing module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetRunningSites">
            <summary>
            Returns all running sites.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.WebPartsStructuredData.LoadFromXmlElement(System.Xml.XmlElement)">
            <summary>
            Loads the data from the given XML element
            </summary>
            <param name="element">XML element</param>
        </member>
        <member name="M:CMS.OnlineMarketing.WebPartsStructuredData.GetXmlElement(System.Xml.XmlDocument)">
            <summary>
            Gets the XML element for the data
            </summary>
            <param name="doc">Parent XML document</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABHandlers">
            <summary>
            AB testing event handlers.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.PARAM_ABTEST_NAME">
            <summary>
            Used as a query parameter when logging analytics via JavaScript.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.PARAM_ABTEST_VARIANT_NAME">
            <summary>
            Used as a query parameter when logging analytics via JavaScript.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.PARAM_ABVISIT_FIRST">
            <summary>
            Used as a query parameter when logging analytics via JavaScript.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.ExcludeVisitorFromAB(System.Object,System.EventArgs)">
            <summary>
            Checks traffic and macro condition to decide whether exclude visitor from test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisit(System.Object,System.EventArgs)">
            <summary>
            Checks whether the request is on AB test and user got assigned AB test variant.
            Context properties (<see cref="P:CMS.OnlineMarketing.ABTestContext.CurrentABTest"/>, <see cref="P:CMS.OnlineMarketing.ABTestContext.CurrentABTestVariant"/>, <see cref="P:CMS.OnlineMarketing.ABTestContext.IsFirstABRequest"/>)
            used are assigned in ABTestInfoProvider when AB variant for a PageInfo is requested (not in this handler).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisit(System.String,System.String,System.Boolean,CMS.DocumentEngine.PageInfo)">
            <summary>
            Logs AB visit.
            </summary>
            <param name="testName">AB test name</param>
            <param name="variantName">AB variant name</param>
            <param name="isFirstVisit">Indicates whether the request is user's first visit of the page</param>
            <param name="page">Page the user visits, uses DocumentContext.CurrentPageInfo if left empty</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisitViaJavascript(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Logs AB visit via JavaScript snippet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.InsertABTestJavaScriptWebServiceParameters(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Inserts additional query parameters to the web analytics Javascript snippet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Logs AB conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.UpdateAliasPaths(CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Updates paths of AB variants and AB tests when underlying document is moved or updated (document/node and AB variant/test are linked together just by alias path, not FK).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.GetOriginalVariantNode(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns a <see cref="T:CMS.DocumentEngine.TreeNode"/> which represents an original AB variant for given <paramref name="variantNode"/>.
            </summary>
            <param name="variantNode">Node which represents AB variant</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantStatisticsData">
            <summary>
            Class that holds AB variant's statistics data.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsCount">
            <summary>
            Gets conversions count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.Visits">
            <summary>
            Gets visits count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsValue">
            <summary>
            Gets conversions value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionRate">
            <summary>
            Gets conversion rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.AverageConversionValue">
            <summary>
            Gets average conversion value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantStatisticsData.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionsCount">Conversions count</param>
            <param name="conversionsValue">Conversions value</param>
            <param name="visits">Visits count</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestValidator">
            <summary>
            Class that validates given test (checks for valid from, to and if there's another test already running in this period).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidStart(System.DateTime)">
            <summary>
            Checks whether the start date is valid.
            </summary>
            <param name="start">Test start date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidFinish(System.DateTime,System.DateTime)">
            <summary>
            Checks whether the finish date is valid.
            </summary>
            <param name="start">Test start date</param>
            <param name="finish">Test finish date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.CollidesWithOtherTests(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the test is in collision with other tests on the same page.
            </summary>
            <param name="abTest">AB test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.GetCollidingTestName(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns display name of the colliding test.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.Collides(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns true if test schedules collide, false otherwise.
            </summary>
            <param name="editedTest">Test being edited</param>
            <param name="rivalTest">Test being compared</param>
            <remarks>This method is internal so it can be accessed in separate assembly for tests.</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABConversionRateInterval">
            <summary>
            Class encapsulating conversion rate interval data.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateLowerBound">
            <summary>
            Returns lower bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateUpperBound">
            <summary>
            Returns upper bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.Rate">
            <summary>
            Returns conversions rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.EstimatedConversionRateVariance">
            <summary>
            Returns estimated conversion rate variance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionRateLowerBound">Conversion rate lower bound. Argument must be larger than 0 and lower than 1.</param>
            <param name="conversionRateUpperBound">Conversion rate upper bound. Argument must be larger than 0 and lower than 1.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.ToString">
            <summary>
            Returns formatted interval as X % +- Y %.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModule">
            <summary>
            Represents the A/B tests module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModule.#ctor">
            <summary>
            Initializes a new instance of the ABTestModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModuleMetadata">
            <summary>
            Represents the A/B tests module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the ABTestModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfo">
            <summary>
            ContentPersonalizationVariant data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.OBJECT_TYPE_DOCUMENTVARIANT">
            <summary>
            Object type for document variant
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantInstanceGUID">
            <summary>
            Personalization variant instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPosition">
            <summary>
            Personalization variant position.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayCondition">
            <summary>
            Personalization variant display condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantWebParts">
            <summary>
            Personalization variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantLastModified">
            <summary>
            Personalization variant last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantName">
            <summary>
            Personalization variant code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantID">
            <summary>
            Personalization variant id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDescription">
            <summary>
            Personalization variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayName">
            <summary>
            Personalization variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantEnabled">
            <summary>
            Personalization variant enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDocumentID">
            <summary>
            Personalization variant document id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPageTemplateID">
            <summary>
            Personalization variant page template id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantZoneID">
            <summary>
            Personalization variant zone id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantGUID">
            <summary>
            Personalization variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.GetAutomaticCodeName">
            <summary>
            Gets the automatic code name for the object.
            </summary>
            <remarks>
            There are many cases where the codename has to or has not to be unique. To avoid necessary complexity and prevent further defects, GUID is used for the code name instead.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContentPersonalizationVariant object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContentPersonalizationVariant object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider">
            <summary>
            Class providing ContentPersonalizationVariant management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants">
            <summary>
            Returns a query for all the ContentPersonalizationVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.Int32)">
            <summary>
            Returns content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.String)">
            <summary>
            Returns content personalization variant with specified name.
            </summary>
            <param name="variantName">Content personalization variant name.</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Sets (updates or inserts) specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(System.Int32)">
            <summary>
            Deletes content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalization(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with Content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The current view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.ContentPersonalizationEnabled(System.String)">
            <summary>
            Indicates whether the content personalization is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariants(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUp(System.Int32)">
            <summary>
            Moves the variant up in the position sequence (up = smaller VariantPosition = sooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDown(System.Int32)">
            <summary>
            Moves the variant down in the position sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariants(System.Object,System.Boolean,System.Int32)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The zone instance of web part instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <param name="documentId">Document ID if the instance holds a widget</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetInfo(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteInfo(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalizationInternal(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUpInternal(System.Int32)">
            <summary>
            Moves task up in the order sequence (up = smaller VariantPosition = sooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDownInternal(System.Int32)">
            <summary>
            Moves task down in the order sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingZoneInstance(CMS.PortalEngine.WebPartZoneInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the zone instance variant which fulfill its display condition. If no variant found, return the original zone.
            </summary>
            <param name="originalZone">The original zone instance</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table containing chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingWebPartInstance(CMS.PortalEngine.WebPartInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the web part instance variant which fulfill its display condition. If no variant found, return the original web part.
            </summary>
            <param name="originalWebPart">The original web part</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table containing chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariantsInternal(System.Object,System.Boolean,System.Int32)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget) running in the current <see cref="T:CMS.DocumentEngine.DocumentContext"/>.
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The zone instance of web part instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <param name="documentId">Document ID if the instance holds a widget</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationModule">
            <summary>
            Represents the Content personalization module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationModule.#ctor">
            <summary>
            Initializes a new instance of the ContentPersonalizationModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationModuleMetadata">
            <summary>
            Represents the Content personalization module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the ContentPersonalizationModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestModule">
            <summary>
            Represents the MVT tests module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestModule.#ctor">
            <summary>
            Initializes a new instance of the MVTestModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestModuleMetadata">
            <summary>
            Represents the MVT tests module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the MVTestModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.RegisterTranslationRecords(System.Data.DataSet,System.String,CMS.DataEngine.TranslationHelper,System.String[])">
            <summary>
            Ensure translation records registration.
            </summary>
            <param name="data">Source dataset</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.IsDocumentObjectType(System.String)">
            <summary>
            Returns true if object type is from documents data.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingHandlers">
            <summary>
            Online marketing event handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.DuplicateActivitiesForContact(System.Object,CMS.ContactManagement.DuplicateActivitiesForContactEventArgs)">
            <summary>
            Duplicates record in Activity table and all related tables if required.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.StoreActivities(System.Object,System.EventArgs)">
            <summary>
            Performs bulk insert of activities currently stored in memory before the application ends to ensure the persistence.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.LogAbAndMvtContext(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Sets AB test and MVTest context from event parameters.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.SetAbAndMvtContext(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Sets up <see cref="T:CMS.OnlineMarketing.ABTestContext"/> and <see cref="T:CMS.OnlineMarketing.MVTContext"/> according to the parameters in given <paramref name="parameters"/>.
            </summary>
            <param name="parameters">Dictionary containing all required parameters</param>
            <param name="siteName">Site name for which should be the context set up</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.CloneTemplateVariants(System.Object,CMS.PortalEngine.PageTemplateCloneEventArgs)">
            <summary>
            Clones content personalization and MVT variants of the template after template is cloned as ad-hoc.
            </summary>
            <param name="sender">Sender</param>
            <param name="pageTemplateClonedEventArgs">Template clone data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.CombinePageTemplateInstance_After(System.Object,CMS.DocumentEngine.PageInfoEventArgs)">
            <summary>
            Combines the page template instance with MVT and personalization data
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModuleMetadata">
            <summary>
            Represents the Online Marketing module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTHandlers">
            <summary>
            MV testing event handlers.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.MVTCOOKIE_PREFIX">
            <summary>
            Cookie prefix.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.MVTCONVERSION">
            <summary>
            Conversion name.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.PARAM_MVT_COMBINATION_NAME">
            <summary>
            Used as a query parameter when logging analytics via JavaScript. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.InsertMVTestJavaScriptWebServiceParameters(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Inserts additional query parameters to the web analytics Javascript snippet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MoveMVTests(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Moves MVT tests together with a document
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LogMVTConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Logs AB and MVT conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LogMVTestConversion(System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Checks cookies and logs MVT conversions.
            </summary>
            <param name="siteName">Site name</param>
            <param name="culture">Culture</param>
            <param name="conversionName">Conversion name</param>
            <param name="objectId">Object ID</param>
            <param name="count">Conversions count</param>
            <param name="value">Conversions value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.HandleMVTestConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Checks if conversion is applicable for MV Test and saves it.
            </summary>
            <param name="sender">Sender</param>
            <param name="processLogRecordEventArgs">Log record data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.ConversionExists(System.String,System.String)">
            <summary>
            Returns false if conversion does not exists
            </summary>
            <param name="conversionName">Conversion name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetNewValue(System.Int32,System.Collections.Generic.IList{System.Double})">
            <summary>
            Returns value according to stored conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LoadVariants(System.Object,CMS.PortalEngine.WebPartLoadVariantsArgs)">
            <summary>
            Loads all the MVT/Content personalization variants for this web part instance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LoadZoneVariants(System.Object,CMS.PortalEngine.WebPartLoadVariantsArgs)">
            <summary>
            Loads all the MVT/Content personalization variants for this zone instance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MoveAllWebParts(System.Object,CMS.PortalEngine.MoveWebPartsArgs)">
            <summary>
            Updates web parts variants after all webparts are moved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MoveWebPart(System.Object,CMS.PortalEngine.MoveWebPartsArgs)">
            <summary>
            Updates web parts variants after webpart move        
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.RemoveWebPart(System.Object,CMS.PortalEngine.RemoveWebPartsArgs)">
            <summary>
            Remove MVT a CP variants
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.RemoveAllWebParts(System.Object,CMS.PortalEngine.RemoveWebPartsArgs)">
            <summary>
            Remove MVT a CP variants for all webparts
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.PageTemplateDelete(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Event raised after page template is deleted.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetVariants(System.Object,CMS.PortalEngine.GetVariantsEventArgs)">
            <summary>
            Event raised after template's variants are requested
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetVariant(System.Object,CMS.PortalEngine.GetVariantEventArgs)">
            <summary>
            Raised when variant is requested.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SetVariantWebParts(System.Object,CMS.PortalEngine.SetVariantEventArgs)">
            <summary>
            Event raised when variant is to be saved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SetVariant(System.Object,CMS.PortalEngine.SetVariantEventArgs)">
            <summary>
            Event raised when variant's properties are saved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.DeleteWidgetVariants(System.Object,CMS.PortalEngine.DeleteVariantEventArgs)">
            <summary>
            Event raised when variants are to be deleted.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.ChangeLayoutZoneId(System.Object,CMS.PortalEngine.ChangeLayoutZoneIdArgs)">
            <summary>
            Updates web parts variants after their parent layout zone id is changed
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTHelper">
            <summary>
            Helper class for MVTests
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.LoadVariants(System.Boolean,CMS.PortalEngine.VariantModeEnum,CMS.PortalEngine.WebPartInstance,System.Int32)">
            <summary>
            Loads all the MVT/Content personalization variants for this web part instance.
            </summary>
            <param name="forceLoad">Indicates if already loaded variants should be reloaded</param>
            <param name="variantMode">Specifies which variants should be loaded (MVT/ContentPersonalization/None - means both MVT+CP variants should try to load)</param>
            <param name="wpInstance">Web part's instance</param>
            <param name="documentId">Document ID if the instance holds a widget</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.LoadZoneVariants(System.Boolean,CMS.PortalEngine.VariantModeEnum,CMS.PortalEngine.WebPartZoneInstance)">
            <summary>
            Loads all the MVT/Content personalization variants for this zone instance.
            </summary>
            <param name="forceLoad">Indicates if already loaded variants should be reloaded</param>
            <param name="variantMode">Specifies which variants should be loaded (MVT/ContentPersonalization/None - means both MVT+CP variants should try to load)</param>
            <param name="wpZoneInstance">Zone's instance</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.UpdateWebPartsVariants(CMS.PortalEngine.WebPartZoneInstance,CMS.PortalEngine.WebPartZoneInstance,CMS.PortalEngine.PageTemplateInfo)">
            <summary>
            Updates web parts variants 
            </summary>
            <param name="zone">Zone instance</param>
            <param name="targetZone">Target zone instance</param>
            <param name="pti">Zone's page template info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.ContainsPageInfoObject(CMS.PortalEngine.WebPartZoneInstance)">
            <summary>
            Indicates whether the given zone instance contains a valid page info object.
            </summary>
            <param name="zoneInstance">The zone instance.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Range`1">
            <summary>
            Class representing range of values.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.#ctor(`0,`0)">
            <summary>
            Class representing range of values.
            </summary>
            <param name="endpoint1">One endpoint of given range</param>
            <param name="endpoint2">Second endpoint of given range</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.IntersectsWith(CMS.OnlineMarketing.Range{`0})">
            <summary>
            Returns true if range intersects with another one.
            </summary>
            <param name="range">Second range to check for intersection</param>
            <returns>True if the two ranges intersects, false otherwise</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestStatusEnum">
            <summary>
            MVT test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Disabled">
            <summary>
            Disabled - task is disabled.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Running">
            <summary>
            Running status - task is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.NotRunning">
            <summary>
            Not running - task is enabled, but not running yet
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Finished">
            <summary>
            Finished status - task has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfo">
            <summary>
            MVTCombinationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.OBJECT_TYPE_DOCUMENTCOMBINATION">
            <summary>
            Object type for document combination
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO">
            <summary>
            Type information (Web part, zone combinations).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information (Combinations containing widgets).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationConversions">
            <summary>
            Number of conversions of the current combination
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationGUID">
            <summary>
            Unique combination identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationDocumentID">
            <summary>
            MVT combination document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationLastModified">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationName">
            <summary>
            MVT combination code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationCustomName">
            <summary>
            MVT combination custom name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationPageTemplateID">
            <summary>
            MVT combination page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabled">
            <summary>
            MVT combination enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabledOriginal">
            <summary>
            MVT combination enabled - original value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationIsDefault">
            <summary>
            Indicates whether the MVT combination is a default combination (without any mvt variants).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfoProvider">
            <summary>
            Class providing MVTCombinationInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_NAME_PREFIX">
            <summary>
            Default prefix for new combinations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_CUSTOMNAME_MAX_LENGHT">
            <summary>
            The maximum allowed length of the automatically generated combination custom names.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.mTemplateCombinations">
            <summary>
            Dictionary containing combination infos with keys: templateID_combinationName 
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfoProvider.TemplateCombinations">
            <summary>
            Dictionary containing combination infos with keys: templateID_combinationName 
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfoProvider.RandomGenerator">
            <summary>
            Gets random generator for choosing a combination.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinations">
            <summary>
            Returns a query for all the MVTCombinationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32)">
            <summary>
            Returns MVT combination with the specified ID.
            </summary>
            <param name="combinationId">Combination ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfo(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Sets (updates or inserts) specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(System.Int32)">
            <summary>
            Deletes MVT combination with the specified ID.
            </summary>
            <param name="combinationId">MVT combination ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(System.String)">
            <summary>
            Deletes MVT combinations using the specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValid(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether the specified MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplate(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId">PageTemplate id parameter</param>
            <param name="enabledOnly">Indicates whether only enabled combinations should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpart(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZone(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="zoneId">The zone id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumber(System.Int32,System.Int32)">
            <summary>
            Gets the new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinations(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables/enables all combinations where the MVT variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The MVT variant id</param>
            <param name="enable">True = Enable the combinations; False = Disable the combinations</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomName(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationName(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfoInternal(System.String)">
            <summary>
            Deletes MVT combinations using the specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.ClearHashtables(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValidInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplateInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId">Page template id</param>
            <param name="enabledOnly">Indicates whether only enabled should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfoInternal(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpartInternal(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZoneInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumberInternal(System.Int32,System.Int32)">
            <summary>
            Gets a new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinationsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables all combinations where the variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The variant id</param>
            <param name="enable">True = Enable; false = Disable</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.LoadTemplateCombinations">
            <summary>
            Load all combinations from DB to the dictionary.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Gets the template combination code.
            </summary>
            <param name="combinationObj">The combination obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(System.Int32,System.String)">
            <summary>
            Gets the template combination site code.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationName">Name of the MVT combination</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomNameInternal(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationNameInternal(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfo">
            <summary>
            MVTCombinationVariationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationVariationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationVariationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationVariationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationVariationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider">
            <summary>
            Class providing MVTCombinationVariationInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariations">
            <summary>
            Returns query of all relationships between MVT combinations and MVT variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.SetMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationObj">MVT combination - MVT variant relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.AddRelationship(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>	
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfo(System.String)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant using specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.RemoveRelationship(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariants(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfoInternal(System.String)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant using specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariantsInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfo">
            <summary>
            MVTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.mOriginalCulture">
            <summary>
            Original culture of the multivariate test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestTargetConversionType">
            <summary>
            Multivariate test target conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestID">
            <summary>
            Multivariate test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestConversions">
            <summary>
            Multivariate test conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestCulture">
            <summary>
            Multivariate test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestLastModified">
            <summary>
            Last modification of the multivariate test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenFrom">
            <summary>
            Start date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestGUID">
            <summary>
            Unique multivariate test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestName">
            <summary>
            Multivariate test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDisplayName">
            <summary>
            Multivariate test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestMaxConversions">
            <summary>
            Multivariate test maximum conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDescription">
            <summary>
            Multivariate test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestPage">
            <summary>
            Multivariate test page.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestSiteID">
            <summary>
            Multivariate test site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenTo">
            <summary>
            End date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestEnabled">
            <summary>
            Indicates whether the multivariate test is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.OriginalCulture">
            <summary>
            Gets or sets the original culture of the test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the MVT Test object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes dependencies from the specified MVTest.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfoProvider">
            <summary>
            Class providing MVTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests">
            <summary>
            Returns a query for all the MVTestInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.Int32)">
            <summary>
            Returns multivariate test with specified ID.
            </summary>
            <param name="testId">Multivariate test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.String,System.String)">
            <summary>
            Returns multivariate test with the specified name.
            </summary>
            <param name="testName">The multivariate test name</param>                
            <param name="sitename">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Sets (updates or inserts) specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(System.Int32)">
            <summary>
            Deletes multivariate test with specified ID.
            </summary>
            <param name="testId">The multivariate test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ClearHashtables(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversions(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">MVTest name</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
            <param name="hits">Hits count</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MoveMVTests(System.String,System.String,System.Int32)">
            <summary>
            Moves all MVTests from the document under the oldAlias path to the document under the newAlias path.
            </summary>
            <param name="newAlias">Document's new alias path</param>
            <param name="oldAlias">Document's old alias path</param>
            <param name="siteID">Document's siteID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestingEnabled(System.String)">
            <summary>
            Indicates whether multivariate testing is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTest(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatus(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo,CMS.OnlineMarketing.MVTestStatusEnum@)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
            <param name="status">Returns current test status</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsRunningMVTest(System.String,System.Int32,System.String)">
            <summary>
            Determines whether there is a running multivariate test for the specified document.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVT(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a mvt test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetConflicting(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns all conflicting tests (tests running in the same time interval on same page with same culture and are enabled).
            </summary>
            <param name="info">Info to check conflicts for</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfoInternal(System.String,System.String)">
            <summary>
            Returns multivariate with specified name.
            </summary>
            <param name="testName">The multivariate test name</param>   
            <param name="siteName">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetConflictingInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns all conflicting tests (tests running in the same time interval on same page with same culture and are enabled).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplates(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to tits culture.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVTInternal(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversionsInternal(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">The multivariate test name</param>
            <param name="combinationName">The combination name</param>
            <param name="siteName">The site name</param>
            <param name="culture">The culture code</param>
            <param name="hits">The hits count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatisticsInternal(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTestInternal(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTStatusByCombinations(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns "Running" or "Finished", based only on MVTest combinations.
            </summary>
            <param name="testObj">MVTestInfo object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTestInternal(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a multivariate test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestsInternal(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(CMS.OnlineMarketing.MVTestInfo,CMS.DataEngine.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting tests which are running at the same time as the specified test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,CMS.DataEngine.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting multivariate tests which are running for the same conditions as defined in the method params (testPage, testSiteId, testCulture...).
            </summary>
            <param name="testId">The test id to be excluded from the where condition</param>
            <param name="testPage">The test page</param>
            <param name="testSiteId">The test site id</param>
            <param name="testCulture">The test culture</param>
            <param name="openFrom">The open from</param>
            <param name="openTo">The open to</param>
            <param name="parameters">The parameters</param>
            <returns>String containing actual Where condition</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(System.String,System.Int32)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MoveMVTestsInternal(System.String,System.String,System.Int32)">
            <summary>
            Moves all MVTests from the document under the oldAlias path to the document under the newAlias path.
            </summary>
            <param name="newAlias">Document's new alias path</param>
            <param name="oldAlias">Document's old alias path</param>
            <param name="siteID">Document's site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplatesInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to test culture.
            </summary>
            <param name="testObj">Test object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeString(CMS.OnlineMarketing.MVTTargetConversionTypeEnum)">
            <summary>
            Returns MVTTargetConversionType string.
            </summary>
            <param name="conversionType">Target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeEnum(System.String)">
            <summary>
            Returns MVTTargetConversionType enum.
            </summary>
            <param name="conversionType">String representation of target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusString(CMS.OnlineMarketing.MVTestStatusEnum)">
            <summary>
            Returns MVTestStatus string.
            </summary>
            <param name="statusType">Test status type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusEnum(System.String)">
            <summary>
            Returns MVTestStatus enum.
            </summary>
            <param name="statusType">String representation of test status type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfo">
            <summary>
            MVTVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.OBJECT_TYPE_DOCUMENTVARIANT">
            <summary>
            Object type for document MVT variant
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO_DOCUMENTVARIANT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.mMVTVariantEnabledOriginal">
            <summary>
            Original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantZoneID">
            <summary>
            MVT variant zone ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDocumentID">
            <summary>
            MVT variant document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantInstanceGUID">
            <summary>
            Web part instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDisplayName">
            <summary>
            MVT variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDescription">
            <summary>
            MVT variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantPageTemplateID">
            <summary>
            MVT variant page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabled">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabledOriginal">
            <summary>
            Gets or sets the original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantGUID">
            <summary>
            Unique project identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantName">
            <summary>
            MVT variant name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantWebParts">
            <summary>
            MVT variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantLastModified">
            <summary>
            Last modification of the MVT variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the MVT Variant object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfoProvider">
            <summary>
            Class providing MVTVariantInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants">
            <summary>
            Returns a query for all the MVTVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Int32)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Guid)">
            <summary>
            Gets the MVT variant info.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.String)">
            <summary>
            Returns MVT variant with specified name.
            </summary>
            <param name="variantName">MVT variant name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Sets (updates or inserts) specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Int32)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Guid)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariants(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enable">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariants(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariants(System.Object,System.Boolean,System.Int32)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The zone instance of web part instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <param name="documentId">Document ID if the instance holds a widget</param>
            <returns>
            True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantId(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariantsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enabled">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.String)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="webPartsXml">Web parts XML string</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantIdInternal(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariantsInternal(System.Object,System.Boolean,System.Int32)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The zone instance of web part instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <param name="documentId">Document ID if the instance holds a widget</param>
            <returns>
            True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTTargetConversionTypeEnum">
            <summary>
            Target conversion type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.Total">
            <summary>
            Actual conversions are compared with sum of all conversions for multivariate test
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.AnyCombination">
            <summary>
            Actual conversions are compared with each combination conversion value.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.GetColumnNames">
            <summary>
            Gets the default list of column names for this class
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModule">
            <summary>
            Represents the On-line Marketing module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RegisterActivityModifiers">
            <summary>
            Register classes for modifying on-line marketing related properties in activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.MoveMVTests(System.Object[])">
            <summary>
            Move all related MVTests from one location to another
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.EnsureDefaultCombination(System.Object[])">
            <summary>
            Ensure that the page template has a default combination created.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RemoveCustomer(System.Object[])">
            <summary>
            Removes customer from all contact management objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ContactIsMonitored(System.Object[])">
            <summary>
            Returns TRUE if the given contact is being monitored.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateNewContact(System.Object[])">
            <summary>
            Creates new contact for related object given in <paramref name="parameters"/>.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateRelation(System.Object[])">
            <summary>
            Creates the contact relation
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetCurrentContactId(System.Object[])">
            <summary>
            Returns current contact ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetExistingContact(System.Object[])">
            <summary>
            Returns current contact if such exists.
            </summary>
            <param name="parameters">Parameters array.</param>
            <returns>Current contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetUserLoginContactId(System.Object[])">
            <summary>
            Returns contact ID for specified user
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetTruncatedName(System.String)">
            <summary>
            Returns name trimmed to 100 chars. If the string is shorter, returns the same string.
            </summary>
        </member>
        <member name="T:CMS.MarketingAutomation.MarketingAutomationUsageDataSource">
            <summary>
            Provides statistical information about module.
            </summary>
        </member>
        <member name="P:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfEnabledMarketingAutomationProcesses(System.Collections.Generic.IEnumerable{CMS.WorkflowEngine.WorkflowInfo})">
            <summary>
            Returns number of enabled marketing automation processes.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfDisabledMarketingAutomationProcesses(System.Collections.Generic.IEnumerable{CMS.WorkflowEngine.WorkflowInfo})">
            <summary>
            Returns number of disabled marketing automation processes.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfContactsWithinEachProcess">
            <summary>
            Returns number of contacts within each process.
            </summary>
        </member>
    </members>
</doc>
