<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Chat.Web.UI</name>
    </assembly>
    <members>
        <member name="T:CMS.Chat.Web.UI.ChatCssHelper">
            <summary>
            Provides helper methods for registration of chat scripts.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatCssHelper.RegisterStylesheet(System.Web.UI.Page)">
            <summary>
            Registers CSS stylesheet. If page inherits CMSChatPage, CMSDesk stylesheet will be used  instead of livesite stylesheet.
            </summary>
            <param name="page">Page that the stylesheet will be registered to.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatCssHelper.RegisterStylesheet(System.Web.UI.Page,System.Boolean)">
            <summary>
            Registers CSS stylesheet. If cmsDeskStyle is true, CMSDesk stylesheet will be used instead of livesite stylesheet.
            The CMS desk stylesheet is bootstrap for support dialog, old css otherwise.
            </summary>
            <param name="page">Page that the stylesheet will be registered to.</param>
            <param name="cmsDeskStyle">Indicates if administration stylesheet will be used instead of live site stylesheet.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatCssHelper.RegisterStylesheetInternal(System.Web.UI.Page)">
            <summary>
            Registers CSS stylesheet. If page inherits CMSChatPage, CMSDesk stylesheet will be used  instead of livesite stylesheet.
            </summary>
            <param name="page">Page that the stylesheet will be registered to.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatCssHelper.RegisterStylesheetInternal(System.Web.UI.Page,System.Boolean)">
            <summary>
            Registers CSS stylesheet. If cmsDeskStyle is true, CMSDesk stylesheet will be used instead of livesite stylesheet.
            The CMS desk stylesheet is bootstrap for support dialog, old css otherwise.
            </summary>
            <param name="page">Page that the stylesheet will be registered to.</param>
            <param name="cmsDeskStyle">Indicates if administration stylesheet will be used instead of live site stylesheet.</param>
        </member>
        <member name="T:CMS.Chat.Web.UI.ChatScriptHelper">
            <summary>
            Provides helper methods for registration of chat scripts.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatAJAXProxy(CMS.UIControls.AbstractCMSPage)">
            <summary>
            Registers AJAX proxy which can be used to call ChatService.svc from javascript.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatSupportAJAXProxy(CMS.UIControls.AbstractCMSPage)">
            <summary>
            Registers AJAX proxy which can be used to call ChatSupportService.svc from javascript.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatSupportManager(System.Web.UI.Page)">
            <summary>
            Registers ChatSupportManager and support scripts.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatNotificationManager(System.Web.UI.Page)">
            <summary>
            Registers Chat sound manager used for playing sound notifications.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatManager(System.Web.UI.Page)">
            <summary>
            Registers ChatManager.js and support scripts.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatAJAXProxyInternal(CMS.UIControls.AbstractCMSPage)">
            <summary>
            Registers AJAX proxy which can be used to call ChatService.svc from javascript.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatSupportAJAXProxyInternal(CMS.UIControls.AbstractCMSPage)">
            <summary>
            Registers AJAX proxy which can be used to call ChatSupportService.svc from javascript.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatSupportManagerInternal(System.Web.UI.Page)">
            <summary>
            Registers ChatSupportManager and support scripts.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatNotificationManagerInternal(System.Web.UI.Page)">
            <summary>
            Registers Chat sound manager used for playing sound notifications.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterChatManagerInternal(System.Web.UI.Page)">
            <summary>
            Registers ChatManager.js and support scripts.
            </summary>
            <param name="page">AbstractCMSPage. Script tag will be inserted to ScriptManager on this page.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatScriptHelper.RegisterAJAXProxy(CMS.UIControls.AbstractCMSPage,System.String)">
            <summary>
            Registers service reference to the Script Manager of the specified page.
            </summary>
            <param name="page">Page with ScriptManager.</param>
            <param name="serviceURL">URL to the serive</param>
        </member>
        <member name="T:CMS.Chat.Web.UI.ChatUIHelper">
            <summary>
            Provides helper methods for chat UI.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.MakeWebpartEnvelope(System.String,CMS.PortalEngine.Web.UI.CMSAbstractWebPart,System.String,System.String)">
            <summary>
            Make webpart's envelope, which is used for styling and hiding.
            </summary>
            <param name="cssClass">String. Envelope css classes.</param>
            <param name="webpart">CMSAbstractWebpart. Reference to webpart object.</param>
            <param name="innerContainerTitle">String. Defines title of container (if webpart has no container defined).</param>
            <param name="innerContainerName">String. Defines name of container (if webpart has no container defined).</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetWebpartLoadingDiv(System.String,System.String)">
            <summary>
            Get webpart's loading div which is showed when data are loaded.
            </summary>
            <param name="cssClass">String. Loading div css classes.</param>
            <param name="loadingTextResStrName">String. Defines name of resource string which will be used to resolve loading text.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetWebpartTransformation(System.String,System.String)">
            <summary>
            Gets webpart's transformation.
            </summary>
            <param name="transformationName">String. Name of transfromation which will be loaded.</param>
            <param name="transformationError">String. Reference to resource string which will be returned when error occured during loading transformation.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetRoomIdFromQuery(System.Int32,System.String)">
            <summary>
            Gets room ID from query or returns original room ID.
            </summary>
            <param name="roomID">Int. Original webparts room ID (will be returned if no query room id setted).</param>
            <param name="groupID">String. Webpart's group id.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetChatRoomWindowURL(System.Web.UI.Page)">
            <summary>
            Returns chat room window url from global chat settings
            </summary>
            <param name="page">Page that asks for window URL. Administration window URL is returned when administration page is given, live site window URL otherwise.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetCMSDeskChatUserField(System.Web.UI.Control,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets string representation which can be used to display chat user in CMS Desk.
            
            If user is not anonymous, returned string is a HTML code which contains anchor to open user's details in new window.
            
            If user is anonymous, returned string will be simply his nickname.
            
            Nickname will be always HTML encoded.
            </summary>
            <param name="control">Script for opening new window will be added to this control</param>
            <param name="chatUserID">ID of chat user which will be displayed</param>
            <param name="chatUserNickname">Nickname of chat user which will be displayed</param>
            <param name="isAnonymous">True if chat user is anonymous</param>
            <returns>String representation of this chat user</returns>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetCMSDeskChatUserField(System.Web.UI.Control,CMS.Chat.ChatUserInfo)">
            <summary>
            Gets string representation which can be used to display chat user in CMS Desk.
            
            If user is not anonymous, returned string is a HTML code which contains anchor to open user's details in new window.
            
            If user is anonymous, returned string will be simply his nickname.
            
            Nickname will be always HTML encoded.
            </summary>
            <param name="control">Script for opening new window will be added to this control</param>
            <param name="chatUser">ChatUser whos nickname will be returned</param>
            <returns>String representation of this chat user</returns>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.MakeWebpartEnvelopeInternal(System.String,CMS.PortalEngine.Web.UI.CMSAbstractWebPart,System.String,System.String)">
            <summary>
            Make webpart's envelope, which is used for styling and hiding.
            </summary>
            <param name="cssClass">String. Envelope css classes.</param>
            <param name="webpart">CMSAbstractWebpart. Reference to webpart object.</param>
            <param name="innerContainerTitle">String. Defines title of container (if webpart has no container defined).</param>
            <param name="innerContainerName">String. Defines name of container (if webpart has no container defined).</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetWebpartLoadingDivInternal(System.String,System.String)">
            <summary>
            Get webpart's loading div which is showed when data are loaded.
            </summary>
            <param name="cssClass">String. Loading div css classes.</param>
            <param name="loadingTextResStrName">String. Defines name of resource string which will be used to resolve loading text.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetWebpartTransformationInternal(System.String,System.String)">
            <summary>
            Gets webpart's transformation.
            </summary>
            <param name="transformationName">String. Name of transformation which will be loaded.</param>
            <param name="transformationError">String. Reference to resource string which will be returned when error occurred during loading transformation.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetRoomIdFromQueryInternal(System.Int32,System.String)">
            <summary>
            Gets room ID from query or returns original room ID.
            </summary>
            <param name="roomID">Int. Original webparts room ID (will be returned if no query room id setted).</param>
            <param name="groupID">String. Webpart's group id.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetChatRoomWindowURLInternal(System.Web.UI.Page)">
            <summary>
            Returns chat room window url from global chat settings
            </summary>
            <param name="page">Page that asks for window URL. Administration window URL is returned when administration page is given, live site window URL otherwise.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.GetCMSDeskChatUserFieldInternal(System.Web.UI.Control,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets string representation which can be used to display chat user in CMS Desk.
            
            If user is not anonymous, returned string is a HTML code which contains anchor to open user's details in new window.
            
            If user is anonymous, returned string will be simply his nickname.
            
            Nickname will be always HTML encoded.
            </summary>
            <param name="control">Script for opening new window will be added to this control</param>
            <param name="chatUserID">ID of chat user which will be displayed</param>
            <param name="chatUserNickname">Nickname of chat user which will be displayed</param>
            <param name="isAnonymous">True if chat user is anonymous</param>
            <returns>String representation of this chat user</returns>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUIHelper.IsChatAdministrationPage(System.Web.UI.Page)">
            <summary>
            Checks whether the given page is administration page or live site page.
            </summary>
            <param name="page">Page to check.</param>
            <returns>True if page is administration page, false otherwise.</returns>
        </member>
        <member name="T:CMS.Chat.Web.UI.ChatUserFormExtender">
            <summary>
            Extends UI forms used for chat users with additional abilities.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUserFormExtender.OnInit">
            <summary>
            Initializes the extender.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUserFormExtender.OnAfterDataLoad(System.Object,System.EventArgs)">
            <summary>
            Handles loaded data.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUserFormExtender.OnBeforeValidate(System.Object,System.EventArgs)">
            <summary>
            Validates form.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.ChatUserFormExtender.ShowErrorAndStopProcessing(System.String)">
            <summary>
            Shows error and sets StopProcessing flag of UIFormControl to true.
            
            Error is passed as resource string, which is resolved before displaying.
            </summary>
            <param name="resourceString">Error resource string</param>
        </member>
        <member name="T:CMS.Chat.Web.UI.CMSChatPage">
            <summary>
            Base page for all Chat pages in CMS Desk Tools. 
            </summary>
        </member>
        <member name="F:CMS.Chat.Web.UI.CMSChatPage.permissionsCache">
            <summary>
            "Cache" for permissions check.
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatPage.ReadGlobalAllowed">
            <summary>
            True if user has read global permission for resource ResourceName on current site.
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatPage.ReadAllowed">
            <summary>
            True if user has read permission for resource ResourceName on current site.
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatPage.ModifyGlobalAllowed">
            <summary>
            True if user has modify global permission for resource ResourceName on current site.
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatPage.ModifyAllowed">
            <summary>
            True if user has modify permission for resource ResourceName on current site.
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatPage.ResourceName">
            <summary>
            Resource name
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.CheckModifyPermission(System.Nullable{System.Int32})">
            <summary>
            Checks if user has modify permission based on siteID. If siteID is null, then modifyglobal permission is checked. 
            Otherwise modify is checked and siteID has to be current site.
            </summary>
            <param name="siteID">SiteID to check permission for.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.HasUserModifyPermission(System.Nullable{System.Int32})">
            <summary>
            Returns true if user has modify permission based on siteID (if siteID is null, then modifyglobal is checked, otherwise modify).
            </summary>
            <param name="siteID">Site ID to check permission for</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.OnInit(System.EventArgs)">
            <summary>
            Checks any read permission (this is the only necessary requirement for viewing pages).
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.CheckAnyReadPermission">
            <summary>
            Checks if user has at least one read permission (read or readglobal).
            
            Redirects to access denied if user does not have any permission.
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.CheckReadPermission(System.Nullable{System.Int32})">
            <summary>
            Checks if user has read permission based on siteID. If siteID is null, then readglobal permission is checked. 
            Otherwise read is checked and siteID has to be current site.
            </summary>
            <param name="siteID">SiteID to check permission for.</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.IsAuthorizedPerResource(System.String)">
            <summary>
            Checks if user has permission passed in parameter for resource ResourceName.
            </summary>
            <param name="permissionName">Code name of the permission</param>
            <returns>True if user has permission; otherwise false</returns>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.CheckAnyPermission(System.String[])">
            <summary>
            Checks if user has at least one of the passed permission on current site.
            </summary>
            <param name="permissionNames">Array of permission names</param>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatPage.CheckPermission(System.String)">
            <summary>
            Checks if user has permission passed in the parameter for resource ResourceName on current site.
            
            User is redirected to access denied page if he doesn't have permission.
            </summary>
            <param name="permissionName">Code name of the permission</param>
        </member>
        <member name="T:CMS.Chat.Web.UI.CMSChatRoomPage">
            <summary>
            Base page for Chat pages where room is edited (room -> General, room -> Chat Users, messages, view)
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatRoomPage.EditedChatRoom">
            <summary>
            Edited room. This property has to be set by child page.
            Property can't be of type ChatRoomInfo, because this project can't reference Chat project (circular references and separability).
            </summary>
        </member>
        <member name="P:CMS.Chat.Web.UI.CMSChatRoomPage.EditedRoomSiteID">
            <summary>
            Edited room site id
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatRoomPage.OnInit(System.EventArgs)">
            <summary>
            Init event handler
            </summary>
        </member>
        <member name="M:CMS.Chat.Web.UI.CMSChatRoomPage.HasUserModifyPermission">
            <summary>
            Checks if user has modify permission based on site ID of room stored in EditedChatRoom.
            </summary>
            <returns>True if user has edit permissions; otherwise false</returns>
        </member>
    </members>
</doc>
