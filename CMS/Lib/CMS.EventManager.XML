<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.EventManager</name>
    </assembly>
    <members>
        <member name="T:CMS.EventManager.EventBookingActivityInitializer">
            <summary>
            Represents implementation of <see cref="T:CMS.Activities.IActivityInitializer"/> for event booking activity.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventBookingActivityInitializer.#ctor(System.Int32,CMS.DocumentEngine.TreeNode)">
            <summary>
            Instantiate new instance of <see cref="T:CMS.EventManager.EventBookingActivityInitializer"/>.
            </summary>
            <param name="attendeeId">Specifies id of attendee that booked to event</param>
            <param name="eventNode">Specifies event node</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="eventNode"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.EventManager.EventBookingActivityInitializer.Initialize(CMS.Activities.IActivityInfo)">
            <summary>
            Initializes <see cref="T:CMS.Activities.IActivityInfo"/> properties for event booking activity.
            </summary>
            <param name="activity">Activity info</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="activity"/> is <c>null</c>.</exception>
        </member>
        <member name="P:CMS.EventManager.EventBookingActivityInitializer.ActivityType">
            <summary>
            Gets string type of the activity.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventBookingActivityInitializer.SettingsKeyName">
            <summary>
            Activity settings key name, used to check whether activity logging is enabled.
            </summary>
        </member>
        <member name="F:CMS.EventManager.BookingEventListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.EventManager.BookingEventListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.EventManager.BookingEventListInfo.#ctor">
            <summary>
            Constructor - Creates an empty BookingEventListInfo object.
            </summary>
        </member>
        <member name="M:CMS.EventManager.BookingEventListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BookingEventListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.EventManager.BookingEventListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventManagerModule">
            <summary>
            Represents the Event Manager module.
            </summary>
        </member>
        <member name="F:CMS.EventManager.EventManagerModule.BOOKING_EVENT_EMAIL_TEMPLATE_TYPE_NAME">
            <summary>
            Name of email template type for booking event.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventManagerModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventManagerModule.OnInit">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventManagerModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventManagerModule.GetSiteEvent(System.Object[])">
            <summary>
            Gets the site event
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="T:CMS.EventManager.EventAttendeeInfo">
            <summary>
            EventAttendeeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.EventManager.EventAttendeeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.EventManager.EventAttendeeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeID">
            <summary>
            ID of the attendee.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeLastName">
            <summary>
            Last name of the attendee.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeFirstName">
            <summary>
            First name of the attendee.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeEmail">
            <summary>
            Email of the attendee.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeEventNodeID">
            <summary>
            ID of event node.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeePhone">
            <summary>
            Phone number of the attendee.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeGUID">
            <summary>
            Attendee GUID.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventAttendeeInfo.AttendeeLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfo.#ctor">
            <summary>
            Constructor - Creates an empty EventAttendeeInfo object.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new EventAttendeeInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventAttendeeInfoProvider">
            <summary>
            Class providing EventAttendeeInfo management.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.GetEventAttendeeInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.GetEventAttendeeInfo(System.Int32)">
            <summary>
            Returns the EventAttendeeInfo structure for the specified eventAttendee.
            </summary>
            <param name="eventAttendeeId">EventAttendee id</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.SetEventAttendeeInfo(CMS.EventManager.EventAttendeeInfo)">
            <summary>
            Sets (updates or inserts) specified eventAttendee.
            </summary>
            <param name="eventAttendee">EventAttendee to set</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.DeleteEventAttendeeInfo(CMS.EventManager.EventAttendeeInfo)">
            <summary>
            Deletes specified eventAttendee.
            </summary>
            <param name="eventAttendeeObj">EventAttendee object</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.DeleteEventAttendeeInfo(System.Int32)">
            <summary>
            Deletes specified eventAttendee.
            </summary>
            <param name="eventAttendeeId">EventAttendee id</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.GetEventAttendeeInfo(System.Int32,System.String)">
            <summary>
            Gets attendee info by event node ID and attendee's e-mail.
            </summary>
            <param name="eventNodeId">Event node id</param>
            <param name="attendeeEmail">Attendee email</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.GetEventAttendees">
            <summary>
            Provides ObjectQuery access to EventAttendees
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.GetEventAttendees(System.Int32)">
            <summary>
            Gets the ObjectQuery of event attendees of the specific event.
            </summary>
            <param name="eventNodeId">Event node ID</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.IsRegisteredForEvent(System.Int32,System.String)">
            <summary>
            Returns true if attendee is registered for the event.
            </summary>
            <param name="eventNodeId">Event node</param>
            <param name="attendeeEmail">Attendee's e-mail</param>
        </member>
        <member name="M:CMS.EventManager.EventAttendeeInfoProvider.DeleteInfo(CMS.EventManager.EventAttendeeInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="T:CMS.EventManager.EventManagerModuleMetadata">
            <summary>
            Represents the Event Manager module metadata.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventManagerModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventProvider">
            <summary>
            Class providing sending of invitation in eventmanager.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventProvider.SendInvitation(System.String,CMS.Base.IDataContainer,System.String)">
            <summary>
            Sends invitation e-mail to new attendee.
            </summary>
            <param name="siteName">Site name</param>
            <param name="eventData">Event data for text merging</param>
            <param name="sendTo">Send to e-mail address</param>
        </member>
        <member name="M:CMS.EventManager.EventProvider.SendInvitation(System.String,CMS.Base.IDataContainer,CMS.Base.IDataContainer)">
            <summary>
            Sends invitation e-mail to new attendee.
            </summary>
            <param name="siteName">Site name</param>
            <param name="eventData">Event data for text merging</param>
            <param name="attendeeData">Attendee data for text merging</param>
        </member>
        <member name="M:CMS.EventManager.EventProvider.SendInvitation(System.String,CMS.Base.IDataContainer,CMS.Base.IDataContainer,CMS.Globalization.TimeZoneInfo)">
            <summary>
            Sends invitation e-mail to new attendee.
            </summary>
            <param name="siteName">Site name</param>
            <param name="eventData">Event data for text merging</param>
            <param name="attendeeData">Attendee data for text merging</param>
            <param name="tzi">Time zone for shifting datetime values</param>
        </member>
        <member name="M:CMS.EventManager.EventProvider.GetEvent(System.Int32,System.String,System.String)">
            <summary>
            Gets event data.
            </summary>
            <param name="eventNodeId">ID of event node</param>
            <param name="siteName">Site name</param>
            <param name="columns">Columns</param>
            <returns>Returns dataset with result</returns>
        </member>
        <member name="M:CMS.EventManager.EventProvider.GetEventDateString(System.DateTime,System.DateTime,System.Boolean,CMS.Globalization.TimeZoneInfo,System.String)">
            <summary>
            Returns string representation of event time with dependence on current ITimeZone manager
            time zone settings.
            </summary>
            <param name="start">Event start time</param>
            <param name="end">Event end time</param>
            <param name="isAllDayEvent">Indicates if it is all day event - if yes, result does not contain times</param>
            <param name="tzi">Time zone for shifting datetime values</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.EventManager.EventProvider.GetBookingEventQuery(System.String)">
            <summary>
            Gets the booking event query for selecting events with number of event attendees.
            </summary>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="T:CMS.EventManager.EventSendEmail">
            <summary>
            Thread e-mail sender for event manager.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventSendEmail.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends email to all attandees.
            </summary>
            <param name="eventId">Event id</param>
            <param name="siteName">Site name</param>
            <param name="subject">Subject</param>
            <param name="emailText">E-mail body</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender e-mail</param>
        </member>
        <member name="M:CMS.EventManager.EventSendEmail.Run">
            <summary>
            Sends emails to all attendees.
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventManagerResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.EventManager.EventManagerResolvers.BookingResolver">
            <summary>
            Booking e-mail template macro resolver.
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventImport">
            <summary>
            Handles special actions during the Event import process.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.EventManager.EventExport">
            <summary>
            Handles special actions during the Event export process.
            </summary>
        </member>
        <member name="M:CMS.EventManager.EventExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.EventManager.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.EventManager.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
    </members>
</doc>
