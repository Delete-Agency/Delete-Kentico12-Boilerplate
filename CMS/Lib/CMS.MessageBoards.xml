<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.MessageBoards</name>
    </assembly>
    <members>
        <member name="T:CMS.MessageBoards.IMessageBoardActivityLogger">
            <summary>
            Provides possibility to log message board activities.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.IMessageBoardActivityLogger.LogMessageBoardCommentActivity(CMS.MessageBoards.BoardMessageInfo,CMS.MessageBoards.BoardInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Logs activity for message board comment.
            </summary>
            <param name="boardMessageInfo"><see cref="T:CMS.MessageBoards.BoardMessageInfo"/> to log activity for</param>
            <param name="boardInfo"><see cref="T:CMS.MessageBoards.BoardInfo"/> comment occurred on</param>
            <param name="currentDocument">Current document node; activity is logged even though document is null</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="boardMessageInfo"/> or <paramref name="boardInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.MessageBoards.IMessageBoardActivityLogger.LogMessageBoardSubscriptionActivity(CMS.MessageBoards.BoardInfo,CMS.MessageBoards.BoardSubscriptionInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Logs activity for message board comment.
            </summary>
            <param name="boardInfo"><see cref="T:CMS.MessageBoards.BoardInfo"/> subscription occurred on</param>
            <param name="boardSubscriptionInfo"><see cref="T:CMS.MessageBoards.BoardSubscriptionInfo"/> to log activity for</param>
            <param name="currentDocument">Current document node; activity is logged even though document is null</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="boardInfo"/> or <paramref name="boardSubscriptionInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.MessageBoards.MessageBoardActivityLogger">
            <summary>
            Provides methods for logging message board activities.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardActivityLogger.LogMessageBoardCommentActivity(CMS.MessageBoards.BoardMessageInfo,CMS.MessageBoards.BoardInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Logs activity for message board comment.
            </summary>
            <param name="boardMessageInfo"><see cref="T:CMS.MessageBoards.BoardMessageInfo"/> to log activity for</param>
            <param name="boardInfo"><see cref="T:CMS.MessageBoards.BoardInfo"/> comment occurred on</param>
            <param name="currentDocument">Current document node; activity is logged even though document is null</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="boardMessageInfo"/> or <paramref name="boardInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardActivityLogger.LogMessageBoardSubscriptionActivity(CMS.MessageBoards.BoardInfo,CMS.MessageBoards.BoardSubscriptionInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Logs activity for message board comment.
            </summary>
            <param name="boardInfo"><see cref="T:CMS.MessageBoards.BoardInfo"/> subscription occurred on</param>
            <param name="boardSubscriptionInfo"><see cref="T:CMS.MessageBoards.BoardSubscriptionInfo"/> to log activity for</param>
            <param name="currentDocument">Current document node; activity is logged even though document is null</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="boardInfo"/> or <paramref name="boardSubscriptionInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardActivityLogger.GetCurrentRequest">
            <summary>
            Returns current request.
            </summary>
            <returns>Current request.</returns>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardCommentActivityInitializer.#ctor(CMS.MessageBoards.BoardMessageInfo,CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Constructor of <see cref="T:CMS.MessageBoards.MessageBoardCommentActivityInitializer"/>.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardCommentActivityInitializer.Initialize(CMS.Activities.IActivityInfo)">
            <summary>
            Initializes <see cref="T:CMS.Activities.IActivityInfo"/> properties.
            </summary>
            <param name="activity">Activity info</param>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardCommentActivityInitializer.ActivityType">
            <summary>
            Activity type
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardCommentActivityInitializer.SettingsKeyName">
            <summary>
            Activity settings key name, used to check whether activity logging is enabled.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardSubscriptionActivityInitializer.#ctor(CMS.MessageBoards.BoardInfo,CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Constructor of <see cref="T:CMS.MessageBoards.MessageBoardSubscriptionActivityInitializer"/>.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardSubscriptionActivityInitializer.Initialize(CMS.Activities.IActivityInfo)">
            <summary>
            Initializes <see cref="T:CMS.Activities.IActivityInfo"/> properties.
            </summary>
            <param name="activity">Activity info</param>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardSubscriptionActivityInitializer.ActivityType">
            <summary>
            Activity type
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardSubscriptionActivityInitializer.SettingsKeyName">
            <summary>
            Activity settings key name, used to check whether activity logging is enabled.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardMessageListInfo">
            <summary>
            BoardListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardMessageListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardMessageListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageListInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardMessageListInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardMessageListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageListInfo.GetColumnNames">
            <summary>
            Gets the default list of column names for this class
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardOwnerTypeEnum">
            <summary>
            Type of message board according to owner.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardOwnerTypeEnum.Document">
            <summary>
            Messageboard belongs to document.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardOwnerTypeEnum.User">
            <summary>
            Messageboard belongs to user.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardOwnerTypeEnum.Group">
            <summary>
            Messageboard belongs to group.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardSubscriptionInfo">
            <summary>
            BoardSubscriptionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardSubscriptionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardSubscriptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionLastModified">
            <summary>
            Subscription last modified.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionEmail">
            <summary>
            Subscription e-mail.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionID">
            <summary>
            Subscription ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionGUID">
            <summary>
            Subscription GUID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionBoardID">
            <summary>
            Subscription board ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionUserID">
            <summary>
            Subscription user ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionApproved">
            <summary>
            Indicates if subscription approved.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardSubscriptionInfo.SubscriptionApprovalHash">
            <summary>
            Subscription approval hash code.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardSubscriptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardSubscriptionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardSubscriptionInfoProvider">
            <summary>
            Class providing BoardSubscriptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetSubscriptions(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all the subscriptions for specified user and site.
            </summary>
            <param name="userId">User ID</param>
            <param name="siteId">Site ID</param>
            <param name="topN">Return top N records</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetSubscriptions(System.String,System.String,System.String)">
            <summary>
            Gets all the subscriptions according specified conditions.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetSubscriptions">
            <summary>
            Returns board subscription object query.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetBoardSubscriptionInfo(System.Int32,System.Int32)">
            <summary>
            Returns the BoardSubscriptionInfo structure for the specified board id an user id.
            </summary>
            <param name="boardId">Board id</param>
            <param name="userId">User id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetBoardSubscriptionInfo(System.Int32)">
            <summary>
            Returns the BoardSubscriptionInfo structure for the specified boardSubscription.
            </summary>
            <param name="boardSubscriptionId">BoardSubscription id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetBoardSubscriptionInfo(System.String)">
            <summary>
            Returns the BoardSubscriptionInfo structure for the specified message board subscription hash code.
            </summary>
            <param name="subscriptionHash">Subscription hash.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetBoardSubscriptionInfo(System.Guid)">
            <summary>
            Returns the BoardSubscriptionInfo structure.
            </summary>
            <param name="subscriptionGuid">Board subscription GUID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.SetBoardSubscriptionInfo(CMS.MessageBoards.BoardSubscriptionInfo)">
            <summary>
            Sets (updates or inserts) specified boardSubscription.
            </summary>
            <param name="boardSubscription">BoardSubscription to set</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.DeleteBoardSubscriptionInfo(CMS.MessageBoards.BoardSubscriptionInfo)">
            <summary>
            Deletes specified boardSubscription.
            </summary>
            <param name="infoObj">BoardSubscription object</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.DeleteBoardSubscriptionInfo(System.Int32)">
            <summary>
            Deletes specified board subscription.
            </summary>
            <param name="subscriptionId">Board subscription ID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.DeleteBoardSubscriptionInfo(System.Guid)">
            <summary>
            Deletes specified board subscription.
            </summary>
            <param name="subscriptionGuid">Board subscription GUID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.DeleteBoardSubscriptionInfo(System.Int32,System.Guid)">
            <summary>
            Deletes specified board subscription.
            </summary>
            <param name="boardId">Board ID</param>
            <param name="subscriptionGuid">Board subscription GUID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.SendConfirmationEmail(CMS.MessageBoards.BoardSubscriptionInfo,System.Boolean)">
            <summary>
            Sends subscription or unsubscription confirmation mail.
            </summary>
            <param name="boardSubscription">Board subscription info</param>
            <param name="isSubscription">If true subscription email is sent else unsubscription email is sent</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.SendDoubleOptInEmail(CMS.MessageBoards.BoardSubscriptionInfo)">
            <summary>
            Sends double opt-in mail.
            </summary>
            <param name="boardSubscription">Board subscription info</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.Subscribe(CMS.MessageBoards.BoardSubscriptionInfo,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Subscribe method intend to subscribe user to message board and send confirmation/opt-in email
            </summary>
            <param name="bsi">Subscription to be saved</param>
            <param name="when">Time of subscription</param>
            <param name="sendConfirmationEmail">Indicates if confirmation email should be send</param>
            <param name="sendOptInEmail">Indicates if opt-in email should be send</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.ValidateHash(CMS.MessageBoards.BoardSubscriptionInfo,System.String,System.String,System.DateTime)">
            <summary>
            Validates request hash and checks if request was approved in needed interval.
            </summary>
            <param name="bsi">Board subscription info.</param>
            <param name="requestHash">Hash parameter representing specific subscription</param>
            <param name="datetime">Date and time of request.</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetUnsubscriptionUrl(CMS.MessageBoards.BoardSubscriptionInfo,CMS.MessageBoards.BoardInfo,System.String)">
            <summary>
            Returns unsubscription URL which is used to cancel existing subscription
            </summary>
            <param name="subscription">Message board subscription object</param>
            <param name="bi">Message board object</param>
            <param name="unsubscriptionUrl">Custom unsubscription page URL</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.ApproveSubscription(CMS.MessageBoards.BoardSubscriptionInfo,System.String,System.Boolean,System.String,System.DateTime)">
            <summary>
            Approves existing subscription - sets SubscriptionApproved to true.
            Checks if subscription wasn't already approved. Confirmation e-mail may be sent optionally.
            </summary>
            <param name="bsi">Subscription object</param>
            <param name="subscriptionHash">Hash parameter representing specific subscription</param>
            <param name="sendConfirmationEmail">Indicates if confirmation e-mail should be sent. Confirmation e-mail may also be sent if blog settings requires so</param>
            <param name="datetime">Date and time of request.</param>
            <param name="siteName">Site name.</param>
            <returns>Returns TRUE if subscription found and not already approved. Returns FALSE if subscription not found or already approved.</returns>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.Unsubscribe(CMS.MessageBoards.BoardSubscriptionInfo,System.Boolean)">
            <summary>
            Unsubscribes user from message board.
            </summary>
            <param name="bsi">Board subscription object.</param>
            <param name="sendConfirmationEmail">Indicates whether send confirmation e-mail</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.Unsubscribe(System.String,System.Boolean,System.String,System.DateTime)">
            <summary>
            Unsubscribes user from message board.
            </summary>
            <param name="subscriptionHash">Subscription hash.</param>
            <param name="sendConfirmationEmail">Indicates whether send confirmation e-mail</param>
            <param name="datetime">Date and time of request</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.LogSubscriptionActivity(CMS.MessageBoards.BoardSubscriptionInfo,CMS.MessageBoards.BoardInfo,System.String,System.Boolean)">
            <summary>
            Log activity (subscribing/unsubscribing) using context values.
            </summary>
            <param name="bsi">Board subscription object</param>
            <param name="bi">Board object</param>
            <param name="activityType">Activity type to log</param>
            <param name="checkViewMode">Indicates if view mode should be checked</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.LogSubscriptionActivity(CMS.MessageBoards.BoardSubscriptionInfo,CMS.MessageBoards.BoardInfo,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Log activity (subscribing/unsubscribing)
            </summary>
            <param name="bsi">Board subscription object</param>
            <param name="bi">Board object</param>
            <param name="contactId">Contact ID</param>
            <param name="campaign">Campaign</param>
            <param name="siteId">Site ID</param>
            <param name="documentId">Document ID</param>
            <param name="url">URL</param>
            <param name="activityType">Activity type to log</param>
            <param name="checkViewMode">Indicates if view mode should be checked</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetBoardSubscriptionInfo(System.Int32,System.Guid)">
            <summary>
            Returns the BoardSubscriptionInfo structure.
            </summary>
            <param name="boardId">Board ID</param>
            <param name="subscriptionGuid">Board subscription GUID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.SendConfirmationEmail(CMS.MessageBoards.BoardSubscriptionInfo,System.Boolean,System.Boolean)">
            <summary>
            Sends subscription or unsubscription confirmation mail.
            </summary>
            <param name="boardSubscription">Board subscription info</param>
            <param name="isSubscription">If true subscription email is sent else unsubscription email is sent</param>
            <param name="isOptIn">Indicates if opt-in email should be sent</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardSubscriptionInfoProvider.GetActivationUrl(CMS.MessageBoards.BoardSubscriptionInfo,CMS.MessageBoards.BoardInfo)">
            <summary>
            Returns approval page URL to confirm message board subscription.
            </summary>
            <param name="subscription">Message board subscription object</param>
            <param name="board">Message board object</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardProperties">
            <summary>
            Summary description for BoardProperties.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowNameField">
            <summary>
            Indicates if input field for entering user's name should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowURLField">
            <summary>
            Indicates if input field for entering user's URL should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowEmailField">
            <summary>
            Indicates if input field for entering user's e-mail address should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.EnableContentRating">
            <summary>
            Enables content rating scale for each message.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.MaxRatingValue">
            <summary>
            Max value (length) of content rating scale.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.RatingType">
            <summary>
            Type of content rating scale.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.AllowEmptyRating">
            <summary>
            Indicates if it is allowed to add message without rating.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.CheckIfUserRated">
            <summary>
            If checked, users can rate only once here.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardName">
            <summary>
            Current board name.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardDisplayName">
            <summary>
            Current board display name.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardRoles">
            <summary>
            Default board authorized roles.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardDescription">
            <summary>
            Current board description.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardOwner">
            <summary>
            Owner of the board.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardOpened">
            <summary>
            Indicates whether board is opened.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardAccess">
            <summary>
            Indicates type of board access.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardRequireEmails">
            <summary>
            Indicates the board message post requires e-mail.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardShowEmails">
            <summary>
            Indicates whether the e-mails should be displayed with messages.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardOpenedFrom">
            <summary>
            Board opened from.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardOpenedTo">
            <summary>
            Board opened to.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardEnableSubscriptions">
            <summary>
            Indicates whether the subscriptions are allowed for the current board.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardUnsubscriptionUrl">
            <summary>
            Board unsubscription URL.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardBaseUrl">
            <summary>
            Board base URL.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.StopProcessing">
            <summary>
            Indicates whether processing should be stopped.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowEditButton">
            <summary>
            Indicates whether the EDIT button should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowDeleteButton">
            <summary>
            Indicates whether the DELETE button should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowApproveButton">
            <summary>
            Indicates whether the APPROVE button should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.ShowRejectButton">
            <summary>
            Indicates whether the REJECT button should be displayed.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardModerated">
            <summary>
            Indicates whether the board is moderated.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.CheckPermissions">
            <summary>
            Indicates whether the permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardUseCaptcha">
            <summary>
            Indicates whether the CAPTCHA should be used.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardEnableAnonymousRead">
            <summary>
            Indicates whether the existing messages should be displayed for the anonymous users.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardModerators">
            <summary>
            Default board moderators.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardProperties.BoardLogActivity">
            <summary>
            Indicates whether logging activity is performed.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.MessageBoardHandlers">
            <summary>
            Provides handlers for message boards
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardHandlers.Init">
            <summary>
            Initializes the message board handlers
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardHandlers.ResetRating_Execute(System.Object,CMS.DocumentEngine.DocumentRatingEventArgs)">
            <summary>
            Resets rating for all messages of given document
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardHandlers.Update_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Ensures site change of the board when site of the document changes
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardHandlers.GetContent_Execute(System.Object,CMS.DocumentEngine.DocumentSearchEventArgs)">
            <summary>
            Includes message board content to the document search content
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardExport">
            <summary>
            Handles special actions during the board export process.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardExport.ExportBoardMessages(CMS.CMSImportExport.SiteExportSettings,System.Data.DataTable)">
            <summary>
            Export board messages.
            </summary>
            <param name="settings">Export settings</param>
            <param name="table">Parent data</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardImport">
            <summary>
            Handles special actions during the board import process.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardImport.ImportBoardMessages(CMS.CMSImportExport.SiteImportSettings,System.Data.DataTable,CMS.DataEngine.TranslationHelper)">
            <summary>
            Import board messages.
            </summary>
            <param name="settings">Import settings</param>
            <param name="table">Parent data</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="T:CMS.MessageBoards.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.MessageBoardModuleMetadata">
            <summary>
            Represents the Message Board module metadata.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.MessageBoardResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardResolvers.BoardsResolver">
            <summary>
            Boards e-mail template macro resolver.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.MessageBoardResolvers.BoardsSubscriptionResolver">
            <summary>
            Boards subscription e-mail template macro resolver.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.MessageBoardModule">
            <summary>
            Represents the Message Board module.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.MessageBoardModule.BOARDS_EMAIL_TEMPLATE_TYPE_NAME">
            <summary>
            Name of email template type for boards.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.MessageBoardModule.BOARD_SUBSCRIPTION_EMAIL_TEMPLATE_TYPE_NAME">
            <summary>
            Name of email template type for board subscription.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.OnInit">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.InitImportExport">
            <summary>
            Initializes blog import/export actions
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.InitMacros">
            <summary>
            Initializes the message board macros
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.RemoveModeratorFromBoard(System.Object[])">
            <summary>
            Removes the user from the board
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.AddModeratorToBoard(System.Object[])">
            <summary>
            Adds the moderator to the board
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.RemoveRoleFromBoard(System.Object[])">
            <summary>
            Removes the role from the board
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.AddRoleToBoard(System.Object[])">
            <summary>
            Adds the role to the board
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.GetDocumentBoardsCount(System.Object[])">
            <summary>
            Get number of boards for selected document
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.GetBoardMessageInfo(System.Object[])">
            <summary>
            Gets the message info
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.MessageBoards.MessageBoardModule.GetMessageBoardInfo(System.Object[])">
            <summary>
            Get message board info with dependence on specified board id
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardInfo">
            <summary>
            BoardInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardSiteID">
            <summary>
            Board site ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardRequireEmails">
            <summary>
            If board requires emails.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardLastMessageUserName">
            <summary>
            Board last message username.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardUseCaptcha">
            <summary>
            Board use captcha.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardAccess">
            <summary>
            Board access.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardDescription">
            <summary>
            Board description.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardEnableSubscriptions">
            <summary>
            Board enable subscriptions.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardDocumentID">
            <summary>
            Board document ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardUserID">
            <summary>
            Board user id.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardGroupID">
            <summary>
            Board group id.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardOpenedTo">
            <summary>
            Board opened to.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardDisplayName">
            <summary>
            Board display name.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardID">
            <summary>
            Board id.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardLastModified">
            <summary>
            Board last modified.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardGUID">
            <summary>
            Board GUID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardName">
            <summary>
            Board name.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardModerated">
            <summary>
            Board moderated.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardLastMessageTime">
            <summary>
            Board last message time.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardOpenedFrom">
            <summary>
            Board opened from.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.InheritedUnsubscriptionUrl">
            <summary>
            Returns inherited unsubscription url from settings.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardUnsubscriptionURL">
            <summary>
            Board unsubscription URL.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.InheritedBaseUrl">
            <summary>
            Returns inherited base url from settings.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardBaseURL">
            <summary>
            Board base URL.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardEnabled">
            <summary>
            Board enabled.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardMessages">
            <summary>
            Board messages.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardOpened">
            <summary>
            Board opened.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardLogActivity">
            <summary>
            Indicates whether activity is logged.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.InheritedEnableOptIn">
            <summary>
            Returns inherited value indicating if the message board should use double opt-in from settings.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardEnableOptIn">
            <summary>
            Gets or sets whether the message board should use double opt-in.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.InheritedSendOptInConfirmation">
            <summary>
            Returns inherited value indicating whether subscription confirmation should be sent after double opt-in e-mail from settings.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardSendOptInConfirmation">
            <summary>
            Gets or sets whether subscription confirmation should be sent after double opt-in e-mail.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.InheritedOptInApprovalURL">
            <summary>
            Returns inherited URL of the double opt-in page from settings.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.BoardOptInApprovalURL">
            <summary>
            Gets or sets the URL of the double opt-in page.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.#ctor(CMS.MessageBoards.BoardProperties)">
            <summary>
            Creates new board object according provided properties.
            </summary>
            <param name="properties">Board properties applied to created board</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardInfoProvider">
            <summary>
            Class providing BoardInfo management.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.MessageBoards.BoardInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfo(System.Int32)">
            <summary>
            Returns the BoardInfo structure for the specified board.
            </summary>
            <param name="boardId">Board id.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfo(System.String,System.Int32)">
            <summary>
            Returns the BoardInfo structure for the specified board.
            </summary>
            <param name="boardName">Board code name.</param>
            <param name="documentId">Document ID.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardsCount(System.Int32)">
            <summary>
            Returns the number of message boards related to the specified document.
            </summary>
            <param name="documentId">Document ID to return number of boards for.</param> 
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfoForUser(System.String,System.Int32)">
            <summary>
            Returns the info on board matching specified criteria.
            </summary>
            <param name="boardName">Name of the board.</param>
            <param name="userId">ID of the user board belongs to.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfoForGroup(System.String,System.Int32)">
            <summary>
            Returns the info on board matching specified criteria.
            </summary>
            <param name="boardName">Name of the board.</param>
            <param name="groupId">ID of the group board belongs to.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.SetBoardInfo(CMS.MessageBoards.BoardInfo)">
            <summary>
            Sets (updates or inserts) specified board.
            </summary>
            <param name="board">Board to set.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.DeleteBoardInfo(CMS.MessageBoards.BoardInfo)">
            <summary>
            Deletes specified board.
            </summary>
            <param name="infoObj">Board object.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoards">
            <summary>
            Returns message boards object query.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.DeleteBoardInfo(System.Int32)">
            <summary>
            Deletes specified board.
            </summary>
            <param name="boardId">Board id.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsBoardOpened(System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Determines whether the board is opened for the current user.
            </summary>
            <param name="boardOpen">Indicates whether the board is opened according settings.</param>
            <param name="openFrom">Date-time value of board opening.</param>
            <param name="openTo">Date-time value of board closing.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetUnsubscriptionUrl(System.String,System.String)">
            <summary>
            Gets unsubscription page URL.
            </summary>
            <param name="boardUnsubscriptionUrl">Board unsubscription URL.</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsUserAuthorizedToAddMessages(CMS.MessageBoards.BoardProperties)">
            <summary>
            Returns True if current user is authorized to add messages to the specified message board, otherwise returns False.
            </summary>
            <param name="boardProperties">Properties of the board.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsUserAuthorizedToAddMessages(CMS.MessageBoards.BoardInfo)">
            <summary>
            Returns True if current user is authorized to add messages to the specified message board, otherwise returns False.
            </summary>
            <param name="board">Board information.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsUserAuthorizedPerBoard(CMS.Membership.UserInfo,System.Int32)">
            <summary>
            Checks if the user is authorized per board (if she belongs to the role authorized per board).
            </summary>
            <param name="userInfo">User info.</param>     
            <param name="boardId">ID of the board to check.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsUserAuthorizedToManageMessages(CMS.MessageBoards.BoardInfo)">
            <summary>
            Checks if the current user can manage messages of the specified board.
            </summary>
            <param name="board">Board object to check.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoards(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns all message boards matching specified criteria with associated document data.
            </summary>
            <param name="where">WHERE condition.</param>
            <param name="orderBy">ORDER BY expression.</param>
            <param name="topN">Top N condition.</param>
            <param name="columns">Columns to be selected.</param>
            <param name="documentData">Indicates if document data for each message board should be included in the result dataset.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoardName(System.String,CMS.MessageBoards.BoardOwnerTypeEnum,System.String)">
            <summary>
            Returns the name for messageboard according to its type, webpart name, and identifier dependent on type.
            </summary>
            <param name="boardWebpartName">Name of the webpart the board was created with.</param>
            <param name="type">Type of the message board.</param>
            <param name="identifier">Document GUID in case of document message board type, User GUID in case of user message board type, Group GUID in case of user message board type.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoardUrl(CMS.MessageBoards.BoardInfo,System.String)">
            <summary>
            Returns absolute URL to the document where the message board is placed on.
            </summary>        
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.DoubleOptInInterval(System.String)">
            <summary>
            Gets double opt-in interval for the site. It's time interval in hours within which user has to approve her subscription.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.SendOptInConfirmation(System.String)">
            <summary>
            Gets setting value indicating if double opt-in confirmation emails should be sent.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.EnableDoubleOptIn(System.String)">
            <summary>
            Gets setting value indicating if double opt-in should be enabled.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardOwnerTypeEnum(System.String)">
            <summary>
            Returns BoardOwnerType specified by string.
            </summary>
            <param name="enumStr">'user', 'group' or 'document' (default) string to be converted.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardOwnerTypeEnumString(CMS.MessageBoards.BoardOwnerTypeEnum)">
            <summary>
            Returns 'USER', 'GROUP' or 'DOCUMENT' (default) string according to given owner type.
            </summary>
            <param name="boardOwnerTypeEnum">BoardOwnerType to be converted.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the BoardInfo structure for the specified board.
            </summary>
            <param name="boardName">Board code name.</param>
            <param name="documentId">Document ID.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardsCountInternal(System.Int32)">
            <summary>
            Returns the number of message boards related to the specified document.
            </summary>
            <param name="documentId">Document ID to return number of boards for.</param> 
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfoForUserInternal(System.String,System.Int32)">
            <summary>
            Returns the info on board matching specified criteria.
            </summary>
            <param name="boardName">Name of the board.</param>
            <param name="userId">ID of the user board belongs to.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardInfoForGroupInternal(System.String,System.Int32)">
            <summary>
            Returns the info on board matching specified criteria.
            </summary>
            <param name="boardName">Name of the board.</param>
            <param name="groupId">ID of the group board belongs to.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.DeleteInfo(CMS.MessageBoards.BoardInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.IsUserAuthorizedPerBoardInternal(CMS.Membership.UserInfo,System.Int32)">
            <summary>
            Checks if the user is authorized per board (if she belongs to the role authorized per board).
            </summary>
            <param name="userInfo">User info.</param>     
            <param name="boardId">ID of the board to check.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoardsInternal(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns all message boards matching specified criteria with associated document data.
            </summary>
            <param name="where">WHERE condition.</param>
            <param name="orderBy">ORDER BY expression.</param>
            <param name="topN">Top N condition.</param>
            <param name="columns">Columns to be selected.</param>
            <param name="documentData">Indicates if document data for each message board should be included in the result dataset.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoardUrlInternal(CMS.MessageBoards.BoardInfo,System.String)">
            <summary>
            Returns absolute URL to the document where the message board is placed on.
            <param name="board">Message board object to get document URL of.</param>
            <param name="siteName">Site name of the message board.</param>
            </summary>        
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetMessageBoardNameInternal(System.String,CMS.MessageBoards.BoardOwnerTypeEnum,System.String)">
            <summary>
            Returns the name for messageboard according to its type, webpart name, and identifier dependent on type.
            </summary>
            <param name="boardWebpartName">Name of the webpart the board was created with.</param>
            <param name="type">Type of the message board.</param>
            <param name="identifier">User GUID in case of user message board type or Group GUID in case of user message board type.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.UpdateData(System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Updates data for all records given by where condition.
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2."</param>
            <param name="where">Where condition.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetFullNameDictionary">
            <summary>
            Creates a new dictionary for caching the objects by the full name.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name.
            </summary>
            <param name="fullName">Board full name.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardInfoProvider.GetBoardFullName(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets board full name to be used within a hashtable.
            </summary>
            <param name="boardName">Board name.</param>
            <param name="documentId">Board document ID, if board represents a document ad-hoc board.</param>
            <param name="userId">Board user ID, if board represents user board.</param>
            <param name="groupId">Board group ID, if board represents group board.</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardMessageInfo">
            <summary>
            BoardMessageInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardMessageInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardMessageInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardMessageInfo.mMessageUserInfo">
            <summary>
            Post IP address, and agent values.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageBoardID">
            <summary>
            Message board ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageIsSpam">
            <summary>
            Message Is Spam.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageText">
            <summary>
            Message text.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageLastModified">
            <summary>
            Message last modified datetime.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageInserted">
            <summary>
            Message inserted datetime.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageUserInfo">
            <summary>
            Additional user info.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageID">
            <summary>
            Message ID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageAvatarGUID">
            <summary>
            Message Avatar GUID.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageUserID">
            <summary>
            Id of the user who inserted message.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageApprovedByUserID">
            <summary>
            ID of the user who approved the message.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageEmail">
            <summary>
            Message email.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageUserName">
            <summary>
            Message user name.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageGUID">
            <summary>
            GUID of the message.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageRatingValue">
            <summary>
            Rating of current message (float between 0..1).
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageApproved">
            <summary>
            Is message approved or not.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfo.MessageURL">
            <summary>
            Message URL.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardMessageInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardMessageInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardMessageInfoProvider">
            <summary>
            Class providing BoardMessageInfo management.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardMessageInfoProvider.EnableEmails">
            <summary>
            Indicates if e-mails are allowed to be sent to subscribers and moderators, by default it is set to True.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetBoardMessageInfo(System.Int32)">
            <summary>
            Returns the BoardMessageInfo structure for the specified boardMessage.
            </summary>
            <param name="boardMessageId">BoardMessage id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.SetBoardMessageInfo(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Sets (updates or inserts) specified boardMessage.
            </summary>
            <param name="boardMessage">BoardMessage to set</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.DeleteBoardMessageInfo(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Deletes specified boardMessage.
            </summary>
            <param name="infoObj">BoardMessage object</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.DeleteBoardMessageInfo(System.Int32)">
            <summary>
            Deletes specified boardMessage.
            </summary>
            <param name="boardMessageId">BoardMessage id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetMessages">
            <summary>
            Returns messages object query.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetMessages(System.String,System.String)">
            <summary>
            Returns dataset of all messages according to where and order by condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">OrderBy condition</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetMessages(System.Int32)">
            <summary>
            Returns dataset of all messages for given board.
            </summary>
            <param name="boardId">Message board ID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetMessagesCount(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns count of messages under message board specified by name and document ID.
            </summary>
            <param name="boardId">ID of the message board.</param>
            <param name="approvedOnly">Allows to count approved messages only.</param>
            <param name="withoutSpam">Allows to count messages not marked as spam only.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetDocumentMessages(System.Int32)">
            <summary>
            Returns messages for specified document
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.IsUserMessageOwner(System.Int32,System.Int32)">
            <summary>
            Checks if the given user is owner of the given message.
            </summary>
            <param name="userId">Id of the user to check</param>
            <param name="messageId">ID of the message to check</param>        
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.SendNewMessageNotification(CMS.MessageBoards.BoardMessageInfo,System.Boolean,System.Boolean)">
            <summary>
            Sends a notification e-mail to all board subscribers and to all board moderators.
            </summary>
            <param name="message">Board message data</param>
            <param name="toSubscribers">Indicates if notification email should be sent to board subscribers</param>
            <param name="toModerators">Indicates if notification email should be sent to board moderators</param>        
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.UpdateDocumentRating(System.Int32,System.Double,System.Double)">
            <summary>
            Updates document ratings according to old and new rating values.
            </summary>
            <param name="boardId">Board id</param>
            <param name="oldRating">Old rating value</param>
            <param name="newRating">New rating value</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.UpdateMessageBoardCounts(System.Int32)">
            <summary>
            Updates message board messages count, last message time and last message user name.
            </summary>
            <param name="boardID">Board id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetBoardSiteName(System.Int32)">
            <summary>
            Returns sitename for selected board.
            </summary>
            <param name="boardId">Board id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.UpdateData(System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Updates data for all records given by where condition
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.GetMessagesWhereCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets where condition to filter messages
            </summary>
            <param name="boardId">ID of the message board.</param>
            <param name="approvedOnly">Allows to count approved messages only.</param>
            <param name="withoutSpam">Allows to count messages not marked as spam only.</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.SetBoardMessageInfoInternal(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Sets (updates or inserts) specified boardMessage.
            </summary>
            <param name="boardMessage">BoardMessage to set</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardMessageInfoProvider.DeleteBoardMessageInfoInternal(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Deletes specified boardMessage.
            </summary>
            <param name="infoObj">BoardMessage object</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardModeratorInfo">
            <summary>
            BoardModeratorInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardModeratorInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardModeratorInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardModeratorInfo.UserID">
            <summary>
            User id.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardModeratorInfo.BoardID">
            <summary>
            Board id.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardModeratorInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardModeratorInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardModeratorInfoProvider">
            <summary>
            Class providing BoardModeratorInfo management.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.GetBoardModerators">
            <summary>
            Returns object query for board moderators
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.GetBoardModeratorInfo(System.Int32,System.Int32)">
            <summary>
            Returns the BoardModeratorInfo structure for the specified boardModerator.
            </summary>
            <param name="userId">UserID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.SetBoardModeratorInfo(CMS.MessageBoards.BoardModeratorInfo)">
            <summary>
            Sets (updates or inserts) specified boardModerator.
            </summary>
            <param name="boardModerator">BoardModerator to set</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.DeleteBoardModeratorInfo(CMS.MessageBoards.BoardModeratorInfo)">
            <summary>
            Deletes specified boardModerator.
            </summary>
            <param name="infoObj">BoardModerator object</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.DeleteBoardModeratorInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified boardModerator.
            </summary>
            <param name="userId">UserID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.RemoveModeratorFromBoard(System.Int32,System.Int32)">
            <summary>
            Deletes specified BoardModerator info object.
            </summary>
            <param name="userId">User id</param>
            <param name="boardId">Board id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.AddModeratorToBoard(System.Int32,System.Int32)">
            <summary>
            Adds new BoardModeratorInfo object.
            </summary>        
            <param name="boardId">ID of the board moderator is being added to</param>
            <param name="userId">ID of the user representing board moderator</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.IsUserBoardModerator(System.Int32,System.Int32)">
            <summary>
            Checks if the given user is moderator of the given board.
            </summary>
            <param name="userId">ID of the user to check</param>
            <param name="boardId">ID of the board to check</param>        
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.SetBoardModerators(System.Int32,System.String)">
            <summary>
            Inserts moderators for the specified board.
            </summary>
            <param name="boardId">ID of the board moderators are inserted to</param>
            <param name="moderators">String containing user names separated by semicolon</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardModeratorInfoProvider.SetBoardModerators(System.Int32,System.String,System.Boolean)">
            <summary>
            Inserts moderators for the specified board.
            </summary>
            <param name="boardId">ID of the board moderators are inserted to</param>
            <param name="moderators">String containing user names separated by semicolon</param>
            <param name="useIds">Indicates whether the string representing moderators contains user IDs rather than user names</param>
        </member>
        <member name="T:CMS.MessageBoards.BoardRoleInfo">
            <summary>
            BoardRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardRoleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.MessageBoards.BoardRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardRoleInfo.RoleID">
            <summary>
            Role id.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.BoardRoleInfo.BoardID">
            <summary>
            Board id.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty BoardRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BoardRoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.BoardRoleInfoProvider">
            <summary>
            Class providing BoardRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.GetBoardRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns the BoardRoleInfo structure for the specified boardRole.
            </summary>
            <param name="boardId">Board id</param>
            <param name="roleId">Role id</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.SetBoardRoleInfo(CMS.MessageBoards.BoardRoleInfo)">
            <summary>
            Sets (updates or inserts) specified boardRole.
            </summary>
            <param name="boardRole">BoardRole to set</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.DeleteBoardRoleInfo(CMS.MessageBoards.BoardRoleInfo)">
            <summary>
            Deletes specified boardRole.
            </summary>
            <param name="infoObj">BoardRole object</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.DeleteBoardRoleInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified boardRole.
            </summary>
            <param name="roleId">ID of the role to delete</param>
            <param name="boardId">ID of the board role is deleted from</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.RemoveRoleFromBoard(System.Int32,System.Int32)">
            <summary>
            Deletes specified boardRole.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.AddRoleToBoard(System.Int32,System.Int32)">
            <summary>
            Adds specified role to the board.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.SetBoardRoles(System.Int32,System.String)">
            <summary>
            Inserts roles for the specified board.
            </summary>
            <param name="boardId">ID of the board roles should be added to</param>
            <param name="roles">String containing role names separated by semicolon</param>
        </member>
        <member name="M:CMS.MessageBoards.BoardRoleInfoProvider.GetBoardRoles">
            <summary>
            Returns object query for board moderators
            </summary>
        </member>
        <member name="T:CMS.MessageBoards.ThreadEmailSender">
            <summary>
            Handles sending message board e-mails in separated thread.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.EmailToModerators">
            <summary>
            Gets or sets the e-mail message to board moderators.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.EmailToSubscribers">
            <summary>
            Gets or sets e-mail message to board subscribers.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.Subscribers">
            <summary>
            Gets or sets the dataset that holds the information on subscribers e-mail is being sent to.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.SiteName">
            <summary>
            Gets or sets the name of the site the message board is placed on.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.Resolver">
            <summary>
            Gets or sets the macro resolver to use.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.SubscribersResolver">
            <summary>
            Resolver to use for subscribers notifications.c
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.MessageObj">
            <summary>
            Message board info.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.BoardObj">
            <summary>
            Current board info.
            </summary>
        </member>
        <member name="P:CMS.MessageBoards.ThreadEmailSender.UnsubscriptionURL">
            <summary>
            Resolved unsubscription URL.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.#ctor(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Constructor - creates and initialize email sender.
            </summary>
            <param name="message">Board message info</param>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.InitSender(CMS.MessageBoards.BoardMessageInfo)">
            <summary>
            Init sender private data and resolver.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.CreateMacroResolver">
            <summary>
            Creates and initializes macro resolver.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.GetEmailMessage(System.Boolean)">
            <summary>
            Returns initialized e-mail message without recipients and with unresolved macros.
            </summary>
            <param name="toSubscribers">True - email message for subscribers is returned, False - email message for moderators is returned</param>        
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.SendNotificationToSubscribers">
            <summary>
            Sends a notification e-mail to all board subscribers.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.SendNotificationToModerators">
            <summary>
            Sends a notification e-mail to all board moderators.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.SendToModerators">
            <summary>
            Sends e-mails to moderators.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.SendToSubscribers">
            <summary>
            Sends e-mails to subscribers.
            </summary>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.ResolveEmailMacros(CMS.EmailEngine.EmailMessage)">
            <summary>
            Resolves e-mail subject, body and plain text body.
            </summary>
            <param name="email">Email to be resolved</param>
        </member>
        <member name="M:CMS.MessageBoards.ThreadEmailSender.SendNewMessageNotification(System.Security.Principal.WindowsIdentity,System.Boolean,System.Boolean)">
            <summary>
            Sends a notification e-mail to all board subscribers and to all board moderators.
            </summary>       
            <param name="wi">Windows identity</param>
            <param name="toSubscribers">Indicates if notification email should be sent to board subscribers</param>
            <param name="toModerators">Indicates if notification email should be sent to board moderators</param>        
        </member>
    </members>
</doc>
