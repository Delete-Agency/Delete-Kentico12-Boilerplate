//
// Mixins
// --------------------------------------------------


// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }

    &:after {
        clear: both;
    }
}

// Focus styles
.tab-focus() {
    outline-color: transparent;
}

.square(@size) {
    .size(@size; @size );
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
    &:-moz-placeholder {
        color: @color;
    }
    // Firefox 4-18
    &::-moz-placeholder {
        color: @color;
    }
    // Firefox 19+
    &:-ms-input-placeholder {
        color: @color;
    }
    // Internet Explorer 10+
    &::-webkit-input-placeholder {
        color: @color;
    }
    // Safari and Chrome
}

// Text overflow
// Requires inline-block or block for proper styling
.text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Set semibold text
// font-weight: 600 is not supported in Chrome anymore
.text-semibold() {
    font-family: @font-family-semibold;
    font-weight: 600;
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Single side border-radius
.border-top-radius(@radius) {
    border-top-right-radius: @radius;
    border-top-left-radius: @radius;
}

.border-right-radius(@radius) {
    border-bottom-right-radius: @radius;
    border-top-right-radius: @radius;
}

.border-bottom-radius(@radius) {
    border-bottom-right-radius: @radius;
    border-bottom-left-radius: @radius;
}

.border-left-radius(@radius) {
    border-bottom-left-radius: @radius;
    border-top-left-radius: @radius;
}

// Prevents rasterisation of elements while scaling (and flickering effect after scaling is completed)
.scale-3d(@ratio) {
    transform: scale3d(@ratio, @ratio, @ratio);
}

.skew(@x; @y ) {
    -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
    transform: skew(@x, @y);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility(@visibility) {
    -webkit-backface-visibility: @visibility;
    -moz-backface-visibility: @visibility;
    backface-visibility: @visibility;
}

// Resize anything
.resizable(@direction) {
    resize: @direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@column-count; @column-gap: @grid-gutter-width ) {
    column-count: @column-count;
    column-gap: @column-gap;
}

// Optional hyphenation
.hyphens(@mode: auto) {
    word-wrap: break-word;
    hyphens: @mode;
}

// Opacity
.opacity(@opacity) {
    opacity: @opacity;
    // IE8 filter
    @opacity-ie: (@opacity * 100);
    filter: ~"alpha(opacity=@{opacity-ie})";
}



// GRADIENTS
// --------------------------------------------------

#gradient {
    // Horizontal gradient, from left to right
    //
    // Creates two color stops, start and end, by specifying a color and position for each color stop.
    // Color stops are not available in IE9 and below.
    .horizontal(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100% ) {
        background-image: linear-gradient(to right, @start-color @start-percent, @end-color @end-percent); // Standard, IE10
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down
    }
    // Vertical gradient, from top to bottom
    //
    // Creates two color stops, start and end, by specifying a color and position for each color stop.
    // Color stops are not available in IE9 and below.
    .vertical(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100% ) {
        background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent); // Standard, IE10
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down
    }

    .directional(@start-color: #555; @end-color: #333; @deg: 45deg ) {
        background-repeat: repeat-x;
        background-image: linear-gradient(@deg, @start-color, @end-color); // Standard, IE10
    }

    .horizontal-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f ) {
        background-image: linear-gradient(to right, @start-color, @mid-color @color-stop, @end-color);
        background-repeat: no-repeat;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback
    }

    .vertical-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f ) {
        background-image: linear-gradient(@start-color, @mid-color @color-stop, @end-color);
        background-repeat: no-repeat;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback
    }

    .radial(@inner-color: #555; @outer-color: #333 ) {
        background-image: radial-gradient(circle, @inner-color, @outer-color);
        background-repeat: no-repeat;
    }

    .striped(@color: #555; @angle: 45deg ) {
        background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    }
}

// Reset filters for IE
//
// When you need to remove a gradient background, do not forget to use this to reset
// the IE filter for IE9 and below.
.reset-filter() {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}



// Retina images
//
// Short retina mixin for setting background-image and -size

.img-retina(@file-1x; @file-2x; @width-1x; @height-1x ) {
    background-image: url("@{file-1x}");

    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and ( min--moz-device-pixel-ratio: 2), only screen and ( -o-min-device-pixel-ratio: 2/1), only screen and ( min-device-pixel-ratio: 2), only screen and ( min-resolution: 192dpi), only screen and ( min-resolution: 2dppx) {
        background-image: url("@{file-2x}");
        background-size: @width-1x @height-1x;
    }
}


// Responsive image
//
// Keep images from scaling beyond the width of their parents.

.img-responsive(@display: block; ) {
    display: @display;
    max-width: 100%; // Part 1: Set a maximum relative to the parent
    height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}


// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.nav-divider(@color: #e5e5e5) {
    height: 1px;
    margin: 0;
    overflow: hidden;
    background-color: @color;
}

// Panels
// -------------------------
.panel-variant(@border; @heading-text-color; @heading-bg-color; @heading-border; ) {
    border-color: @border;

    & > .panel-heading {
        color: @heading-text-color;
        border-top: 3px solid @heading-bg-color;
        border-bottom: 1px solid @heading-border;

        + .panel-collapse .panel-body {
            border-top-color: @border;
        }
    }

    & > .panel-footer {
        + .panel-collapse .panel-body {
            border-bottom-color: @border;
        }
    }
}

// Alerts
// -------------------------
.alert-variant(@background; @text-color; @icon-color; @icon-close-color; @border-style ) {
    background-color: @background;
    color: @color-gray-50;
    border: @border-style;

    i {
        color: @icon-color;
    }

    .close, .close:hover, .close:focus {
        color: @icon-close-color;
    }

    strong, a, b {
        color: @text-color;
    }

    .alert-link {
        color: @text-color;
    }
}


// Button variants
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
.button-variant(@color; @background; @active-background ) {
    color: @color;
    background-color: @background;
    margin: 0;

    &:hover,
    &:active,
    &.active,
    .open .dropdown-toggle& {
        color: @color;
        background-color: @active-background;
    }

    &:active,
    &.active,
    .open .dropdown-toggle& {
        background-image: none;
    }
}


// Pagination
// -------------------------
.pagination-size(@padding-vertical; @padding-horizontal; @font-size; @border-radius ) {
    > li {
        > a,
        > span {
            padding: @padding-vertical @padding-horizontal;
            font-size: @font-size;
        }

        &:first-child {
            > a,
            > span {
                .border-left-radius(@border-radius);
            }
        }

        &:last-child {
            > a,
            > span {
                .border-right-radius(@border-radius);
            }
        }
    }
}


// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.
.navbar-vertical-align(@element-height) {
    margin-top: (@navbar-height - @element-height * 0.5);
    margin-bottom: (@navbar-height - @element-height * 0.5);
}

// Progress bars
// -------------------------
.progress-bar-variant(@color) {
    background-color: @color;

    .progress-striped & {
        #gradient > .striped(@color);
    }
}

// Responsive utilities
// -------------------------
// More easily include all the states for responsive-utilities.less.
.responsive-visibility() {
    display: block !important;

    tr& {
        display: table-row !important;
    }

    th&,
    td& {
        display: table-cell !important;
    }
}

.responsive-invisibility() {
    display: none !important;

    tr& {
        display: none !important;
    }

    th&,
    td& {
        display: none !important;
    }
}

// Centered container element
// Grid System
// -----------

// Centered container element
.container-fixed() {
    margin-right: auto;
    margin-left: auto;
    padding-left: (@grid-gutter-width / 2);
    padding-right: (@grid-gutter-width / 2);
    &:extend(.cms-bootstrap .clearfix all);
}

// Creates a wrapper for a series of columns
.make-row(@gutter: @grid-gutter-width) {
    margin-left: (@gutter / -2);
    margin-right: (@gutter / -2);
    &:extend(.cms-bootstrap .clearfix all);
}

// Generate the extra small columns
.make-xs-column(@columns; @gutter: @grid-gutter-width ) {
    position: relative;
    float: left;
    width: percentage((@columns / @grid-columns));
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: (@gutter * 0.5);
    padding-right: (@gutter * 0.5);
}

// Generate the small columns
.make-sm-column(@columns; @gutter: @grid-gutter-width ) {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: (@gutter * 0.5);
    padding-right: (@gutter * 0.5);
    // Calculate width based on number of columns available
    @media screen and (min-width: @screen-sm) {
        float: left;
        width: percentage((@columns / @grid-columns));
    }
}

// Generate the small column offsets
.make-sm-column-offset(@columns) {
    @media screen and (min-width: @screen-sm) {
        margin-left: percentage((@columns / @grid-columns));
    }
}

.make-sm-column-push(@columns) {
    @media screen and (min-width: @screen-sm) {
        left: percentage((@columns / @grid-columns));
    }
}

.make-sm-column-pull(@columns) {
    @media screen and (min-width: @screen-sm) {
        right: percentage((@columns / @grid-columns));
    }
}

// Generate the medium columns
.make-md-column(@columns; @gutter: @grid-gutter-width ) {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: (@gutter * 0.5);
    padding-right: (@gutter * 0.5);
    // Calculate width based on number of columns available
    @media screen and (min-width: @screen-md) {
        float: left;
        width: percentage((@columns / @grid-columns));
    }
}

// Generate the large column offsets
.make-md-column-offset(@columns) {
    @media screen and (min-width: @screen-md) {
        margin-left: percentage((@columns / @grid-columns));
    }
}

.make-md-column-push(@columns) {
    @media screen and (min-width: @screen-md) {
        left: percentage((@columns / @grid-columns));
    }
}

.make-md-column-pull(@columns) {
    @media screen and (min-width: @screen-md) {
        right: percentage((@columns / @grid-columns));
    }
}

// Generate the large columns
.make-lg-column(@columns; @gutter: @grid-gutter-width ) {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: (@gutter * 0.5);
    padding-right: (@gutter * 0.5);
    // Calculate width based on number of columns available
    @media screen and (min-width: @screen-lg) {
        float: left;
        width: percentage((@columns / @grid-columns));
    }
}

// Generate the large column offsets
.make-lg-column-offset(@columns) {
    @media screen and (min-width: @screen-lg) {
        margin-left: percentage((@columns / @grid-columns));
    }
}

.make-lg-column-push(@columns) {
    @media screen and (min-width: @screen-lg) {
        left: percentage((@columns / @grid-columns));
    }
}

.make-lg-column-pull(@columns) {
    @media screen and (min-width: @screen-lg) {
        right: percentage((@columns / @grid-columns));
    }
}

// CMS forms columns
.make-column(@device; @columns ) {
    // Prevent columns from collapsing when empty
    min-height: 1px;
    box-sizing: border-box;

    @media screen and (min-width: @device) {
        width: percentage((@columns / @grid-columns));
        float: left;
    }
}
// CMS form columns offset
.make-column-offset(@device, @columns) {
    @media screen and (min-width: @device) {
        margin-left: percentage((@columns / @grid-columns));
        float: left;
    }
}

// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

.form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5 ) {
    // Color the label and help text
    .help-block,
    .control-label {
        color: @color-blue-70;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-bottom: 2px solid @border-color;

        &:focus {
            border-bottom: 2px solid darken(@border-color, 10%);
        }
    }
    // Set validation states also for addons
    .input-group-addon {
        color: @text-color;
        border-color: @border-color;
        background-color: @background-color;
    }
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `@input-focus-border` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.

.form-control-focus(@color: @input-border-focus) {
    &:focus {
        border-bottom: 2px solid @color;
        background-color: #fff;
        outline: 0;
    }
}

.code-mirror-focus(@color: @input-border-focus) {
    &.code-mirror-focused {
        border-bottom: 2px solid @color;
        background-color: #fff;
        outline: 0;
    }
}

// Form control sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!

.input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius ) {
    height: @input-height;
    padding: @padding-vertical @padding-horizontal;
    font-size: @font-size;
    line-height: @line-height;
    border-radius: @border-radius;

    select& {
        height: @input-height;
        line-height: @input-height;
    }

    textarea& {
        height: auto;
    }
}

// Disabled icon on all backgrounds
.icon-disabled {
    .opacity(.5);
}

// Disabled style for buttons and dropdown menu
.action-disabled {
    cursor: not-allowed;
    color: @action-disabled-color;
    background-color: @action-disabled-bg;
    background-image: repeating-linear-gradient(-45deg, @action-disabled-bg-stripe-transparent 0px, @action-disabled-bg-stripe 1px, @action-disabled-bg-stripe 2px, @action-disabled-bg-stripe-transparent 3px, @action-disabled-bg-stripe-transparent 4px);
}

.dropdown-disabled {
    cursor: not-allowed;
    background-image: repeating-linear-gradient(-45deg, @dropdown-disabled-bg-stripe-transparent 0px, @dropdown-disabled-bg-stripe 1px, @dropdown-disabled-bg-stripe 2px, @dropdown-disabled-bg-stripe-transparent 3px, @dropdown-disabled-bg-stripe-transparent 4px);

    &:hover {
        background-color: inherit;
        background-image: repeating-linear-gradient(-45deg, @dropdown-disabled-bg-stripe-transparent 0px, @dropdown-disabled-bg-stripe 1px, @dropdown-disabled-bg-stripe 2px, @dropdown-disabled-bg-stripe-transparent 3px, @dropdown-disabled-bg-stripe-transparent 4px);
    }
}

.inline-input() {
    max-width: @input-max-width;
    display: inline-block;
    margin-right: @margin-50;
    vertical-align: top;
}

// Fix white space
//
// Removes white spaces between inline-block elements. Keep white space in child elements except .control-group-inline and .keep-white-space-fixed.
.fix-white-space() {
    word-spacing: @white-space-width * -1;

    .btn, .btn-group, .btn-dropdown, div:not(.control-group-inline):not(.keep-white-space-fixed), span, .form-control, label, a, p {
        word-spacing: 0;
    }
}

// CSS image replacement
//
// Heads up! v3 launched with with only `.hide-text()`, but per our pattern for
// mixins being reused as classes with the same name, this doesn't hold up. As
// of v3.0.1 we have added `.text-hide()` and deprecated `.hide-text()`. Note
// that we cannot chain the mixins together in Less, so they are repeated.
//
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757

// Deprecated as of v3.0.1 (will be removed in v4)
.hide-text() {
    font: ~"0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}
// New mixin to use as of v3.0.1
.text-hide() {
    .hide-text();
}

// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
          box-shadow: @shadow;
}

// Transformations

.translate(@x; @y) {
  -webkit-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y); // IE9 only
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

// Transitions

.transition-transform(@transition) {
  -webkit-transition: -webkit-transform @transition;
     -moz-transition: -moz-transform @transition;
       -o-transition: -o-transform @transition;
          transition: transform @transition;
}